{"version":3,"file":"svelte-sortable-flat-list-view.bundled.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/easing/index.mjs","../node_modules/svelte/animate/index.mjs","../../svelte-drag-and-drop-actions/node_modules/javascript-interface-library/dist/javascript-interface-library.esm.js","../../svelte-drag-and-drop-actions/node_modules/svelte-coordinate-conversion/dist/svelte-coordinate-conversion.esm.js","../../svelte-drag-and-drop-actions/dist/svelte-drag-and-drop-actions.esm.js","../node_modules/svelte-device-info/dist/svelte-device-info.esm.js","../node_modules/locally-unique-id-generator/dist/locally-unique-id-generator.esm.js","../node_modules/javascript-interface-library/dist/javascript-interface-library.esm.js","../node_modules/style-inject/dist/style-inject.es.js","../src/svelte-sortable-flat-list-view.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, animation, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const scaleX = animation.from.width / node.clientWidth;\n    const scaleY = animation.from.height / node.clientHeight;\n    const dx = (animation.from.left - animation.to.left) / scaleX;\n    const dy = (animation.from.top - animation.to.top) / scaleY;\n    const d = Math.sqrt(dx * dx + dy * dy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(d) : duration,\n        easing,\n        css: (_t, u) => `transform: ${transform} translate(${u * dx}px, ${u * dy}px);`\n    };\n}\n\nexport { flip };\n","//----------------------------------------------------------------------------//\n//                        JavaScript Interface Library                        //\n//----------------------------------------------------------------------------//\n/**** get a reference to the \"global\" object ****/\nvar global = /*#__PURE__*/ Function('return this')();\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\n//------------------------------------------------------------------------------\n//--                             Object Functions                             --\n//------------------------------------------------------------------------------\n// allow methods from Object.prototype to be applied to \"vanilla\" objects\n/**** Object_hasOwnProperty ****/\nfunction Object_hasOwnProperty(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('hasOwnProperty' in Value) && (typeof Value.hasOwnProperty === 'function')\n        ? Value.hasOwnProperty(PropertyName)\n        : Object.prototype.hasOwnProperty.call(Value, PropertyName));\n}\n/**** Object_isPrototypeOf ****/\nfunction Object_isPrototypeOf(Value, Candidate) {\n    return ((Value == null) || // let this method crash like its original\n        ('isPrototypeOf' in Value) && (typeof Value.isPrototypeOf === 'function')\n        ? Value.isPrototypeOf(Candidate)\n        : Object.prototype.isPrototypeOf.call(Value, Candidate));\n}\n/**** Object_propertyIsEnumerable ****/\nfunction Object_propertyIsEnumerable(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('propertyIsEnumerable' in Value) && (typeof Value.propertyIsEnumerable === 'function')\n        ? Value.propertyIsEnumerable(PropertyName)\n        : Object.prototype.propertyIsEnumerable.call(Value, PropertyName));\n}\n/**** Object_toString ****/\nfunction Object_toString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toString' in Value) && (typeof Value.toString === 'function')\n        ? Value.toString()\n        : Object.prototype.toString.call(Value));\n}\n/**** Object_toLocaleString ****/\nfunction Object_toLocaleString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toLocaleString' in Value) && (typeof Value.toLocaleString === 'function')\n        ? Value.toLocaleString()\n        : Object.prototype.toString.call(Value)); // a missing \"toLocaleString\" method will crash Object.prototype.toLocaleString\n}\n/**** Object_valueOf ****/\nfunction Object_valueOf(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('valueOf' in Value) && (typeof Value.valueOf === 'function')\n        ? Value.valueOf()\n        : Object.prototype.valueOf.call(Value));\n}\n/**** ObjectMergedWith ****/\nfunction ObjectMergedWith(TargetObject) {\n    var otherObjectList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherObjectList[_i - 1] = arguments[_i];\n    }\n    for (var i = 0, l = otherObjectList.length; i < l; i++) {\n        var otherObject = otherObjectList[i];\n        if (otherObject == null) {\n            continue;\n        }\n        if (typeof otherObject === 'object') {\n            for (var Key in otherObject) {\n                var Descriptor = Object.getOwnPropertyDescriptor(otherObject, Key);\n                if (Descriptor != null) {\n                    Object.defineProperty(TargetObject, Key, Descriptor);\n                }\n            }\n        }\n        else {\n            throwError('InvalidArgument: argument #' + (i + 1) + ' is not an object');\n        }\n    }\n    return TargetObject;\n}\n/**** throwError - simplifies construction of named errors ****/\nfunction throwError(Message) {\n    var Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message);\n    if (Match == null) {\n        throw new Error(Message);\n    }\n    else {\n        var namedError = new Error(Match[2]);\n        namedError.name = Match[1];\n        throw namedError;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Value Classification Functions                      --\n//------------------------------------------------------------------------------\n/**** ValueExists ****/\nfunction ValueExists(Value) {\n    return (Value != null);\n}\n/**** ValueIsMissing ****/\nfunction ValueIsMissing(Value) {\n    return (Value == null);\n}\n/**** ValueIsBoolean ****/\nfunction ValueIsBoolean(Value) {\n    return (typeof Value === 'boolean') || (Value instanceof Boolean);\n}\n/**** ValueIsNumber ****/\nfunction ValueIsNumber(Value) {\n    return (typeof Value === 'number') || (Value instanceof Number);\n}\n/**** ValueIsFiniteNumber (pure \"isFinite\" breaks on objects) ****/\nfunction ValueIsFiniteNumber(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isFinite(Value.valueOf());\n}\n/**** ValueIsNaN (numeric, but NaN - this differs from pure \"isNaN\") ****/\nfunction ValueIsNaN(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isNaN(Value.valueOf());\n}\n/**** ValueIsNumberInRange ****/\nfunction ValueIsNumberInRange(Value, minValue, maxValue, withMin, withMax) {\n    if (withMin === void 0) { withMin = true; }\n    if (withMax === void 0) { withMax = true; }\n    if (!ValueIsNumber(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (!withMin && (Value === minValue)) ||\n                (Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n        else {\n            if ((Value < minValue) || (!withMin && (Value === minValue))) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsInteger ****/\nfunction ValueIsInteger(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value);\n}\n/**** ValueIsIntegerInRange ****/\nfunction ValueIsIntegerInRange(Value, minValue, maxValue) {\n    if (!ValueIsInteger(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (Value > maxValue)) {\n                return false;\n            }\n        }\n        else {\n            if (Value < minValue) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if (Value > maxValue) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsOrdinal ****/\nfunction ValueIsOrdinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 0);\n}\n/**** ValueIsCardinal ****/\nfunction ValueIsCardinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 1);\n}\n/**** ValueIsString ****/\nfunction ValueIsString(Value) {\n    return (typeof Value === 'string') || (Value instanceof String);\n}\n/**** ValueIs[Non]EmptyString ****/\nvar emptyStringPattern = /^\\s*$/;\nfunction ValueIsEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && emptyStringPattern.test(Value.valueOf());\n}\nfunction ValueIsNonEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && !emptyStringPattern.test(Value.valueOf());\n}\n/**** ValueIsStringMatching ****/\nfunction ValueIsStringMatching(Value, Pattern) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && Pattern.test(Value.valueOf());\n}\n/**** ValueIsText ****/\nvar noCtrlCharsButCRLFPattern = /^[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsText(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsButCRLFPattern);\n}\n/**** ValueIsTextline ****/\nvar noCtrlCharsPattern = /^[^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsTextline(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsPattern);\n}\n/**** ValueIsFunction ****/\nfunction ValueIsFunction(Value) {\n    return (typeof Value === 'function');\n}\n/**** ValueIsAnonymousFunction ****/\nfunction ValueIsAnonymousFunction(Value) {\n    return ((typeof Value === 'function') &&\n        ((Value.name == null) || (Value.name === '')));\n}\n/**** ValueIsNamedFunction ****/\nfunction ValueIsNamedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        (Value.name != null) && (Value.name !== ''));\n}\n/**** ValueIsNativeFunction ****/\nfunction ValueIsNativeFunction(Value) {\n    return ((typeof Value === 'function') &&\n        /^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsScriptedFunction ****/\nfunction ValueIsScriptedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        !/^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsObject ****/\nfunction ValueIsObject(Value) {\n    return (Value != null) && (typeof Value === 'object');\n}\n/**** ValueIsPlainObject ****/\nfunction ValueIsPlainObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        (Object.getPrototypeOf(Value) === Object.prototype));\n}\n/**** ValueIsVanillaObject ****/\nfunction ValueIsVanillaObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        !(Value instanceof Object));\n}\n/**** ValueIsArray ****/\nvar ValueIsArray = Array.isArray;\n/**** ValueIsList (\"dense\" array) ****/\nfunction ValueIsList(Value, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        for (var i = 0, l = Value.length; i < l; i++) {\n            if (Value[i] === undefined) {\n                return false;\n            }\n        }\n        if (minLength != null) {\n            if (Value.length < minLength) {\n                return false;\n            }\n        }\n        if (maxLength != null) {\n            if (Value.length > maxLength) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/**** ValueIsListSatisfying ****/\nfunction ValueIsListSatisfying(Value, Validator, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        try {\n            for (var i = 0, l = Value.length; i < l; i++) {\n                if (Validator(Value[i]) == false) {\n                    return false;\n                }\n            }\n            if (minLength != null) {\n                if (Value.length < minLength) {\n                    return false;\n                }\n            }\n            if (maxLength != null) {\n                if (Value.length > maxLength) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        catch (Signal) { /* nop */ }\n    }\n    return false;\n}\n/**** ValueIsInstanceOf ****/\nfunction ValueIsInstanceOf(Value, Constructor) {\n    return (Value instanceof Constructor);\n}\n/**** ValueInheritsFrom ****/\nfunction ValueInheritsFrom(Value, Prototype) {\n    return Object_isPrototypeOf(Prototype, Value);\n}\n/**** ValueIsDate ****/\nfunction ValueIsDate(Value) {\n    return (Value instanceof Date);\n}\n/**** ValueIsError ****/\nfunction ValueIsError(Value) {\n    return (Value instanceof Error);\n}\n/**** ValueIsPromise ****/\nfunction ValueIsPromise(Value) {\n    return (Value != null) && (typeof Value.then === 'function');\n}\n// see https://stackoverflow.com/questions/27746304/how-do-i-tell-if-an-object-is-a-promise\n/**** ValueIsRegExp ****/\nfunction ValueIsRegExp(Value) {\n    return (Value instanceof RegExp);\n}\n/**** ValueIsOneOf ****/\nfunction ValueIsOneOf(Value, ValueList) {\n    return (ValueList.indexOf(Value) >= 0);\n} // no automatic unboxing of boxed values and vice-versa!\n/**** ValueIsColor ****/\nfunction ValueIsColor(Value) {\n    return ValueIsString(Value) && (ColorSet.hasOwnProperty(Value) ||\n        /^#[a-fA-F0-9]{6}$/.test(Value) ||\n        /^#[a-fA-F0-9]{8}$/.test(Value) ||\n        /^rgb\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+\\)$/.test(Value) || // not perfect\n        /^rgba\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+,([01]|[0]?[.][0-9]+)\\)$/.test(Value) // dto.\n    );\n}\n/**** ValueIsEMailAddress ****/\nvar EMailAddressPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n// see https://stackoverflow.com/questions/201323/how-to-validate-an-email-address-using-a-regular-expression\nfunction ValueIsEMailAddress(Value) {\n    return ValueIsStringMatching(Value, EMailAddressPattern);\n}\n/**** ValueIsURL ****/\nvar noCtrlCharsOrWhitespacePattern = /^[^\\s\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsURL(Value) {\n    if (!ValueIsStringMatching(Value, noCtrlCharsOrWhitespacePattern) ||\n        (Value === '')) {\n        return false;\n    }\n    try {\n        new URL(Value, 'file://');\n        return true;\n    }\n    catch (Signal) {\n        return false;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Argument Validation Functions                       --\n//------------------------------------------------------------------------------\nvar rejectNil = false;\nvar acceptNil = true;\n/**** validatedArgument ****/\nfunction validatedArgument(Description, Argument, ValueIsValid, NilIsAcceptable, Expectation) {\n    if (Argument == null) {\n        if (NilIsAcceptable) {\n            return Argument;\n        }\n        else {\n            throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n        }\n    }\n    else {\n        if (ValueIsValid(Argument)) {\n            switch (true) {\n                case Argument instanceof Boolean:\n                case Argument instanceof Number:\n                case Argument instanceof String:\n                    return Argument.valueOf(); // unboxes any primitives\n                default:\n                    return Argument;\n            }\n        }\n        else {\n            throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no valid \" + escaped(Expectation));\n        }\n    }\n}\n/**** ValidatorForClassifier ****/\nfunction ValidatorForClassifier(Classifier, NilIsAcceptable, Expectation) {\n    var Validator = function (Description, Argument) {\n        return validatedArgument(Description, Argument, Classifier, NilIsAcceptable, Expectation);\n    };\n    var ClassifierName = Classifier.name;\n    if ((ClassifierName != null) && /^ValueIs/.test(ClassifierName)) {\n        var ValidatorName = ClassifierName.replace(// derive name from validator\n        /^ValueIs/, NilIsAcceptable ? 'allow' : 'expect');\n        return FunctionWithName(Validator, ValidatorName);\n    }\n    else {\n        return Validator; // without any specific name\n    }\n}\n/**** FunctionWithName (works with older JS engines as well) ****/\nfunction FunctionWithName(originalFunction, desiredName) {\n    if (originalFunction == null) {\n        throwError('MissingArgument: no function given');\n    }\n    if (typeof originalFunction !== 'function') {\n        throwError('InvalidArgument: the given 1st Argument is not a JavaScript function');\n    }\n    if (desiredName == null) {\n        throwError('MissingArgument: no desired name given');\n    }\n    if ((typeof desiredName !== 'string') && !(desiredName instanceof String)) {\n        throwError('InvalidArgument: the given desired name is not a string');\n    }\n    if (originalFunction.name === desiredName) {\n        return originalFunction;\n    }\n    try {\n        Object.defineProperty(originalFunction, 'name', { value: desiredName });\n        if (originalFunction.name === desiredName) {\n            return originalFunction;\n        }\n    }\n    catch (signal) { /* ok - let's take the hard way */ }\n    var renamed = new Function('originalFunction', 'return function ' + desiredName + ' () {' +\n        'return originalFunction.apply(this,Array.prototype.slice.apply(arguments))' +\n        '}');\n    return renamed(originalFunction);\n} // also works with older JavaScript engines\n/**** expect[ed]Value ****/\nfunction expectValue(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    else {\n        return Argument.valueOf();\n    }\n}\nvar expectedValue = expectValue;\n/**** allow/expect[ed]Boolean ****/\nvar allowBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, acceptNil, 'boolean value'), allowedBoolean = allowBoolean;\nvar expectBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, rejectNil, 'boolean value'), expectedBoolean = expectBoolean;\n/**** allow/expect[ed]Number ****/\nvar allowNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, acceptNil, 'numeric value'), allowedNumber = allowNumber;\nvar expectNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, rejectNil, 'numeric value'), expectedNumber = expectNumber;\n/**** allow/expect[ed]FiniteNumber ****/\nvar allowFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, acceptNil, 'finite numeric value'), allowedFiniteNumber = allowFiniteNumber;\nvar expectFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, rejectNil, 'finite numeric value'), expectedFiniteNumber = expectFiniteNumber;\n/**** allow/expect[ed]NaN ****/\nvar allowNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, acceptNil, 'NaN value'), allowedNaN = allowNaN;\nvar expectNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, rejectNil, 'NaN value'), expectedNaN = expectNaN;\n/**** allow[ed]NumberInRange ****/\nfunction allowNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    return (Argument == null\n        ? Argument\n        : expectedNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax));\n}\nvar allowedNumberInRange = allowNumberInRange;\n/**** expect[ed]NumberInRange ****/\nfunction expectNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    expectNumber(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not-a-number\");\n    }\n    if (withMin == null) {\n        withMin = true;\n    }\n    if (withMax == null) {\n        withMax = true;\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue)) ||\n                (Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" (\" + Argument + \") is outside \" +\n                    (\"the allowed range (\" + minValue + \"...\" + maxValue + \")\"));\n            }\n        }\n        else {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" is below the allowed \" +\n                    (\"minimum (\" + Argument + \" \" + (withMin ? '<' : '<=') + \" \" + minValue + \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" exceeds the allowed \" +\n                    (\"maximum (\" + Argument + \" \" + (withMax ? '>' : '>=') + \" \" + maxValue + \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedNumberInRange = expectNumberInRange;\n/**** allow/expect[ed]Integer ****/\nvar allowInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, acceptNil, 'integral numeric value'), allowedInteger = allowInteger;\nvar expectInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, rejectNil, 'integral numeric value'), expectedInteger = expectInteger;\n/**** allow[ed]IntegerInRange ****/\nfunction allowIntegerInRange(Description, Argument, minValue, maxValue) {\n    return (Argument == null\n        ? Argument\n        : expectedIntegerInRange(Description, Argument, minValue, maxValue));\n}\nvar allowedIntegerInRange = allowIntegerInRange;\n/**** expect[ed]IntegerInRange ****/\nfunction expectIntegerInRange(Description, Argument, minValue, maxValue) {\n    expectInteger(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not-a-number\");\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (Argument > maxValue)) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" (\" + Argument + \") is outside \" +\n                    (\"the allowed range (\" + minValue + \"...\" + maxValue + \")\"));\n            }\n        }\n        else {\n            if (Argument < minValue) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" is below the allowed \" +\n                    (\"minimum (\" + Argument + \" < \" + minValue + \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if (Argument > maxValue) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" exceeds the allowed \" +\n                    (\"maximum (\" + Argument + \" > \" + maxValue + \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedIntegerInRange = expectIntegerInRange;\n/**** allow/expect[ed]Ordinal ****/\nvar allowOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, acceptNil, 'ordinal number'), allowedOrdinal = allowOrdinal;\nvar expectOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, rejectNil, 'ordinal number'), expectedOrdinal = expectOrdinal;\n/**** allow/expect[ed]Cardinal ****/\nvar allowCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, acceptNil, 'cardinal number'), allowedCardinal = allowCardinal;\nvar expectCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, rejectNil, 'cardinal number'), expectedCardinal = expectCardinal;\n/**** allow/expect[ed]String ****/\nvar allowString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, acceptNil, 'literal string'), allowedString = allowString;\nvar expectString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, rejectNil, 'literal string'), expectedString = expectString;\n/**** allow/expect[ed]NonEmptyString ****/\nvar allowNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, acceptNil, 'non-empty literal string'), allowedNonEmptyString = allowNonEmptyString;\nvar expectNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, rejectNil, 'non-empty literal string'), expectedNonEmptyString = expectNonEmptyString;\n/**** allow[ed]StringMatching ****/\nfunction allowStringMatching(Description, Argument, Pattern) {\n    return (Argument == null\n        ? Argument\n        : expectedStringMatching(Description, Argument, Pattern));\n}\nvar allowedStringMatching = allowStringMatching;\n/**** expect[ed]StringMatching ****/\nfunction expectStringMatching(Description, Argument, Pattern) {\n    expectString(Description, Argument);\n    if (Pattern.test(Argument)) {\n        return Argument.valueOf();\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" does not match the specified pattern\");\n    }\n}\nvar expectedStringMatching = expectStringMatching;\n/**** allow/expect[ed]Text ****/\nvar allowText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, acceptNil, 'literal text'), allowedText = allowText;\nvar expectText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, rejectNil, 'literal text'), expectedText = expectText;\n/**** allow/expect[ed]Textline ****/\nvar allowTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, acceptNil, 'single line of text'), allowedTextline = allowTextline;\nvar expectTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, rejectNil, 'single line of text'), expectedTextline = expectTextline;\n/**** allow/expect[ed]Function ****/\nvar allowFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, acceptNil, 'JavaScript function'), allowedFunction = allowFunction;\nvar expectFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, rejectNil, 'JavaScript function'), expectedFunction = expectFunction;\n/**** allow/expect[ed]AnonymousFunction ****/\nvar allowAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, acceptNil, 'anonymous JavaScript function'), allowedAnonymousFunction = allowAnonymousFunction;\nvar expectAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, rejectNil, 'anonymous JavaScript function'), expectedAnonymousFunction = expectAnonymousFunction;\n/**** allow/expect[ed]NamedFunction ****/\nvar allowNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, acceptNil, 'named JavaScript function'), allowedNamedFunction = allowNamedFunction;\nvar expectNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, rejectNil, 'named JavaScript function'), expectedNamedFunction = expectNamedFunction;\n/**** allow/expect[ed]NativeFunction ****/\nvar allowNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, acceptNil, 'native JavaScript function'), allowedNativeFunction = allowNativeFunction;\nvar expectNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, rejectNil, 'native JavaScript function'), expectedNativeFunction = expectNativeFunction;\n/**** allow/expect[ed]ScriptedFunction ****/\nvar allowScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, acceptNil, 'scripted JavaScript function'), allowedScriptedFunction = allowScriptedFunction;\nvar expectScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, rejectNil, 'scripted JavaScript function'), expectedScriptedFunction = expectScriptedFunction;\n/**** allow/expect[ed]Object ****/\nvar allowObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, acceptNil, 'JavaScript object'), allowedObject = allowObject;\nvar expectObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, rejectNil, 'JavaScript object'), expectedObject = expectObject;\n/**** allow/expect[ed]PlainObject ****/\nvar allowPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, acceptNil, '\"plain\" JavaScript object'), allowedPlainObject = allowPlainObject;\nvar expectPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, rejectNil, '\"plain\" JavaScript object'), expectedPlainObject = expectPlainObject;\n/**** allow/expect[ed]VanillaObject ****/\nvar allowVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, acceptNil, '\"vanilla\" JavaScript object'), allowedVanillaObject = allowVanillaObject;\nvar expectVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, rejectNil, '\"vanilla\" JavaScript object'), expectedVanillaObject = expectVanillaObject;\n/**** allow[ed]Array ****/\nfunction allowArray(Description, Argument) {\n    return (Argument == null\n        ? Argument\n        : expectedArray(Description, Argument));\n}\nvar allowedArray = allowArray;\n/**** expect[ed]Array ****/\nfunction expectArray(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsArray(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no JavaScript array\");\n    }\n}\nvar expectedArray = expectArray;\n/**** allow[ed]List ****/\nfunction allowList(Description, Argument, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedList(Description, Argument, Expectation, minLength, maxLength));\n}\nvar allowedList = allowList;\n/**** expect[ed]List ****/\nfunction expectList(Description, Argument, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsList(Argument, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is \" + (Expectation == null\n            ? 'either not a list or contains an invalid number of elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedList = expectList;\n/**** allow[ed]ListSatisfying ****/\nfunction allowListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength));\n}\nvar allowedListSatisfying = allowListSatisfying;\n/**** expect[ed]ListSatisfying ****/\nfunction expectListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsListSatisfying(Argument, Validator, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is \" + (Expectation == null\n            ? 'either not a list or contains invalid elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedListSatisfying = expectListSatisfying;\n/**** allow[ed]InstanceOf ****/\nfunction allowInstanceOf(Description, Argument, constructor, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedInstanceOf(Description, Argument, constructor, Expectation));\n}\nvar allowedInstanceOf = allowInstanceOf;\n/**** expect[ed]InstanceOf ****/\nfunction expectInstanceOf(Description, Argument, constructor, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (!(Argument instanceof constructor)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no \" + escaped(Expectation));\n    }\n    return Argument;\n}\nvar expectedInstanceOf = expectInstanceOf;\n/**** allow[ed]ValueInheritingFrom ****/\nfunction allowValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedValueInheritingFrom(Description, Argument, prototype, Expectation));\n}\nvar allowedValueInheritingFrom = allowValueInheritingFrom;\n/**** expect[ed]ValueInheritingFrom ****/\nfunction expectValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (prototype.isPrototypeOf(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no \" + escaped(Expectation));\n    }\n}\nvar expectedValueInheritingFrom = expectValueInheritingFrom;\n/**** allow/expect[ed]Date ****/\nvar allowDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, acceptNil, 'JavaScript Date object'), allowedDate = allowDate;\nvar expectDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, rejectNil, 'JavaScript Date object'), expectedDate = expectDate;\n/**** allow/expect[ed]Error ****/\nvar allowError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, acceptNil, 'JavaScript Error object'), allowedError = allowError;\nvar expectError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, rejectNil, 'JavaScript Error object'), expectedError = expectError;\n/**** allow/expect[ed]Promise ****/\nvar allowPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, acceptNil, 'JavaScript Promise (or \"Thenable\") object'), allowedPromise = allowPromise;\nvar expectPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, rejectNil, 'JavaScript Promise (or \"Thenable\") object'), expectedPromise = expectPromise;\n/**** allow/expect[ed]RegExp ****/\nvar allowRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, acceptNil, 'JavaScript RegExp object'), allowedRegExp = allowRegExp;\nvar expectRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, rejectNil, 'JavaScript RegExp object'), expectedRegExp = expectRegExp;\n/**** allow[ed]OneOf ****/\nfunction allowOneOf(Description, Argument, ValueList) {\n    return (Argument == null\n        ? Argument\n        : expectedOneOf(Description, Argument, ValueList));\n}\nvar allowedOneOf = allowOneOf;\n/**** expect[ed]OneOf ****/\nfunction expectOneOf(Description, Argument, ValueList) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsOneOf(Argument, ValueList)) {\n        return ( // unboxes any primitives\n        (Argument == null) || (typeof Argument.valueOf !== 'function')\n            ? Argument\n            : Argument.valueOf());\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not among the supported values\");\n    }\n}\nvar expectedOneOf = expectOneOf;\n/**** allow/expect[ed]Color ****/\nvar allowColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, acceptNil, 'valid CSS color specification'), allowedColor = allowColor;\nvar expectColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, rejectNil, 'valid CSS color specification'), expectedColor = expectColor;\n/**** allow/expect[ed]EMailAddress ****/\nvar allowEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, acceptNil, 'valid EMail address'), allowedEMailAddress = allowEMailAddress;\nvar expectEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, rejectNil, 'valid EMail address'), expectedEMailAddress = expectEMailAddress;\n/**** allow/expect[ed]URL ****/\nvar allowURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, acceptNil, 'valid URL'), allowedURL = allowURL;\nvar expectURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, rejectNil, 'valid URL'), expectedURL = expectURL;\n/**** escaped - escapes all control characters in a given string ****/\nfunction escaped(Text) {\n    var EscapeSequencePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        return (Match === '\\\\' ? '\\\\\\\\' : Match);\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** unescaped - evaluates all escape sequences in a given string ****/\nfunction unescaped(Text) {\n    var EscapeSequencePattern = /\\\\[0bfnrtv'\"\\\\\\/]|\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        switch (Match) {\n            case '\\\\0': return '\\0';\n            case '\\\\b': return '\\b';\n            case '\\\\f': return '\\f';\n            case '\\\\n': return '\\n';\n            case '\\\\r': return '\\r';\n            case '\\\\t': return '\\t';\n            case '\\\\v': return '\\v';\n            case '\\\\\\'': return \"'\";\n            case '\\\\\"': return '\"';\n            case '\\\\\\\\': return \"\\\\\";\n            default: {\n                var CharCode = parseInt(Match.slice(2), 16);\n                return String.fromCharCode(CharCode);\n            }\n        }\n    });\n}\n/**** quotable - makes a given string ready to be put in single/double quotes ****/\nfunction quotable(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    var EscSeqOrSglQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|'/g;\n    var EscSeqOrDblQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|\"/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(Quote === \"'\" ? EscSeqOrSglQuotePattern : EscSeqOrDblQuotePattern, function (Match) {\n        switch (Match) {\n            case \"'\": return \"\\\\'\";\n            case '\"': return '\\\\\"';\n            case '\\\\': return '\\\\\\\\';\n            default: return Match;\n        }\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** quoted ****/\nfunction quoted(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    return Quote + quotable(Text, Quote) + Quote;\n}\n/**** HTMLsafe ****/\nfunction HTMLsafe(Argument, EOLReplacement) {\n    EOLReplacement = (EOLReplacement || '').trim() || '<br/>';\n    return Argument.replace(/[&<>\"'\\u0000-\\u001F\\u007F-\\u009F\\\\]/g, function (Match) {\n        switch (Match) {\n            case '&': return '&amp;';\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case \"'\": return '&apos;';\n            case '\\b': return '&#92;b';\n            case '\\f': return '&#92;f';\n            case '\\n': return EOLReplacement;\n            case '\\r': return '&#92;r';\n            case '\\t': return '&#92;t';\n            case '\\v': return '&#92;v';\n            case '\\\\': return '&#92;';\n            default:\n                var Result = Match.charCodeAt(0).toString(16);\n                return '&#x0000'.substring(3, 7 - Result.length) + Result + ';';\n        }\n    });\n}\n/**** MarkDownSafe ****/\nfunction MarkDownSafe(Argument, EOLReplacement) {\n    return HTMLsafe(Argument, EOLReplacement).replace(/:/g, '&#58;');\n}\n/**** ValuesDiffer ****/\nfunction ValuesDiffer(thisValue, otherValue) {\n    if (thisValue === otherValue) {\n        return false;\n    }\n    var thisType = typeof thisValue;\n    if (thisType !== typeof otherValue) {\n        return true;\n    }\n    /**** ArraysDiffer ****/\n    function ArraysDiffer(thisArray, otherArray) {\n        if (!Array.isArray(otherArray)) {\n            return true;\n        }\n        if (thisArray.length !== otherArray.length) {\n            return true;\n        }\n        for (var i = 0, l = thisArray.length; i < l; i++) {\n            if (ValuesDiffer(thisArray[i], otherArray[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**** ObjectsDiffer ****/\n    function ObjectsDiffer(thisObject, otherObject) {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n            return true;\n        }\n        for (var key in thisObject) {\n            if (!(key in otherObject)) {\n                return true;\n            }\n        }\n        for (var key in otherObject) {\n            if (!(key in thisObject)) {\n                return true;\n            }\n            if (ValuesDiffer(thisObject[key], otherObject[key])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    switch (thisType) {\n        case 'undefined':\n        case 'boolean':\n        case 'string':\n        case 'function': return true; // most primitives are compared using \"===\"\n        case 'number': return ((isNaN(thisValue) !== isNaN(otherValue)) ||\n            (Math.abs(thisValue - otherValue) > Number.EPSILON));\n        case 'object':\n            if (thisValue == null) {\n                return true;\n            } // since \"other_value\" != null!\n            if (otherValue == null) {\n                return true;\n            } // since \"this_value\" != null!\n            if (Array.isArray(thisValue)) {\n                return ArraysDiffer(thisValue, otherValue);\n            }\n            return ObjectsDiffer(thisValue, otherValue);\n        default: return true; // unsupported property type\n    }\n    return true;\n}\n/**** ValuesAreEqual ****/\nfunction ValuesAreEqual(thisValue, otherValue) {\n    return !ValuesDiffer(thisValue, otherValue);\n}\n/**** ObjectIsEmpty ****/\nfunction ObjectIsEmpty(Candidate) {\n    expectObject('candidate', Candidate);\n    for (var Key in Candidate) {\n        if (Object_hasOwnProperty(Candidate, Key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**** ObjectIsNotEmpty ****/\nfunction ObjectIsNotEmpty(Candidate) {\n    return !ObjectIsEmpty(Candidate);\n}\n/**** StringIsEmpty ****/\nfunction StringIsEmpty(Candidate) {\n    return /^\\s*$/.test(Candidate);\n}\n/**** StringIsNotEmpty ****/\nfunction StringIsNotEmpty(Candidate) {\n    return !StringIsEmpty(Candidate);\n}\n/**** constrained ****/\nfunction constrained(Value, Minimum, Maximum) {\n    if (Minimum === void 0) { Minimum = -Infinity; }\n    if (Maximum === void 0) { Maximum = Infinity; }\n    return Math.max(Minimum, Math.min(Value, Maximum));\n}\n//------------------------------------------------------------------------------\n//--                             Color Utilities                              --\n//------------------------------------------------------------------------------\n// built-in color names (see http://www.w3.org/TR/SVG/types.html#ColorKeywords) ----\nvar ColorSet = {\n    transparent: 'rgba(0,0,0,0,0.0)',\n    aliceblue: 'rgba(240,248,255,1.0)', lightpink: 'rgba(255,182,193,1.0)',\n    antiquewhite: 'rgba(250,235,215,1.0)', lightsalmon: 'rgba(255,160,122,1.0)',\n    aqua: 'rgba(0,255,255,1.0)', lightseagreen: 'rgba(32,178,170,1.0)',\n    aquamarine: 'rgba(127,255,212,1.0)', lightskyblue: 'rgba(135,206,250,1.0)',\n    azure: 'rgba(240,255,255,1.0)', lightslategray: 'rgba(119,136,153,1.0)',\n    beige: 'rgba(245,245,220,1.0)', lightslategrey: 'rgba(119,136,153,1.0)',\n    bisque: 'rgba(255,228,196,1.0)', lightsteelblue: 'rgba(176,196,222,1.0)',\n    black: 'rgba(0,0,0,1.0)', lightyellow: 'rgba(255,255,224,1.0)',\n    blanchedalmond: 'rgba(255,235,205,1.0)', lime: 'rgba(0,255,0,1.0)',\n    blue: 'rgba(0,0,255,1.0)', limegreen: 'rgba(50,205,50,1.0)',\n    blueviolet: 'rgba(138,43,226,1.0)', linen: 'rgba(250,240,230,1.0)',\n    brown: 'rgba(165,42,42,1.0)', magenta: 'rgba(255,0,255,1.0)',\n    burlywood: 'rgba(222,184,135,1.0)', maroon: 'rgba(128,0,0,1.0)',\n    cadetblue: 'rgba(95,158,160,1.0)', mediumaquamarine: 'rgba(102,205,170,1.0)',\n    chartreuse: 'rgba(127,255,0,1.0)', mediumblue: 'rgba(0,0,205,1.0)',\n    chocolate: 'rgba(210,105,30,1.0)', mediumorchid: 'rgba(186,85,211,1.0)',\n    coral: 'rgba(255,127,80,1.0)', mediumpurple: 'rgba(147,112,219,1.0)',\n    cornflowerblue: 'rgba(100,149,237,1.0)', mediumseagreen: 'rgba(60,179,113,1.0)',\n    cornsilk: 'rgba(255,248,220,1.0)', mediumslateblue: 'rgba(123,104,238,1.0)',\n    crimson: 'rgba(220,20,60,1.0)', mediumspringgreen: 'rgba(0,250,154,1.0)',\n    cyan: 'rgba(0,255,255,1.0)', mediumturquoise: 'rgba(72,209,204,1.0)',\n    darkblue: 'rgba(0,0,139,1.0)', mediumvioletred: 'rgba(199,21,133,1.0)',\n    darkcyan: 'rgba(0,139,139,1.0)', midnightblue: 'rgba(25,25,112,1.0)',\n    darkgoldenrod: 'rgba(184,134,11,1.0)', mintcream: 'rgba(245,255,250,1.0)',\n    darkgray: 'rgba(169,169,169,1.0)', mistyrose: 'rgba(255,228,225,1.0)',\n    darkgreen: 'rgba(0,100,0,1.0)', moccasin: 'rgba(255,228,181,1.0)',\n    darkgrey: 'rgba(169,169,169,1.0)', navajowhite: 'rgba(255,222,173,1.0)',\n    darkkhaki: 'rgba(189,183,107,1.0)', navy: 'rgba(0,0,128,1.0)',\n    darkmagenta: 'rgba(139,0,139,1.0)', oldlace: 'rgba(253,245,230,1.0)',\n    darkolivegreen: 'rgba(85,107,47,1.0)', olive: 'rgba(128,128,0,1.0)',\n    darkorange: 'rgba(255,140,0,1.0)', olivedrab: 'rgba(107,142,35,1.0)',\n    darkorchid: 'rgba(153,50,204,1.0)', orange: 'rgba(255,165,0,1.0)',\n    darkred: 'rgba(139,0,0,1.0)', orangered: 'rgba(255,69,0,1.0)',\n    darksalmon: 'rgba(233,150,122,1.0)', orchid: 'rgba(218,112,214,1.0)',\n    darkseagreen: 'rgba(143,188,143,1.0)', palegoldenrod: 'rgba(238,232,170,1.0)',\n    darkslateblue: 'rgba(72,61,139,1.0)', palegreen: 'rgba(152,251,152,1.0)',\n    darkslategray: 'rgba(47,79,79,1.0)', paleturquoise: 'rgba(175,238,238,1.0)',\n    darkslategrey: 'rgba(47,79,79,1.0)', palevioletred: 'rgba(219,112,147,1.0)',\n    darkturquoise: 'rgba(0,206,209,1.0)', papayawhip: 'rgba(255,239,213,1.0)',\n    darkviolet: 'rgba(148,0,211,1.0)', peachpuff: 'rgba(255,218,185,1.0)',\n    deeppink: 'rgba(255,20,147,1.0)', peru: 'rgba(205,133,63,1.0)',\n    deepskyblue: 'rgba(0,191,255,1.0)', pink: 'rgba(255,192,203,1.0)',\n    dimgray: 'rgba(105,105,105,1.0)', plum: 'rgba(221,160,221,1.0)',\n    dimgrey: 'rgba(105,105,105,1.0)', powderblue: 'rgba(176,224,230,1.0)',\n    dodgerblue: 'rgba(30,144,255,1.0)', purple: 'rgba(128,0,128,1.0)',\n    firebrick: 'rgba(178,34,34,1.0)', red: 'rgba(255,0,0,1.0)',\n    floralwhite: 'rgba(255,250,240,1.0)', rosybrown: 'rgba(188,143,143,1.0)',\n    forestgreen: 'rgba(34,139,34,1.0)', royalblue: 'rgba(65,105,225,1.0)',\n    fuchsia: 'rgba(255,0,255,1.0)', saddlebrown: 'rgba(139,69,19,1.0)',\n    gainsboro: 'rgba(220,220,220,1.0)', salmon: 'rgba(250,128,114,1.0)',\n    ghostwhite: 'rgba(248,248,255,1.0)', sandybrown: 'rgba(244,164,96,1.0)',\n    gold: 'rgba(255,215,0,1.0)', seagreen: 'rgba(46,139,87,1.0)',\n    goldenrod: 'rgba(218,165,32,1.0)', seashell: 'rgba(255,245,238,1.0)',\n    gray: 'rgba(128,128,128,1.0)', sienna: 'rgba(160,82,45,1.0)',\n    green: 'rgba(0,128,0,1.0)', silver: 'rgba(192,192,192,1.0)',\n    greenyellow: 'rgba(173,255,47,1.0)', skyblue: 'rgba(135,206,235,1.0)',\n    grey: 'rgba(128,128,128,1.0)', slateblue: 'rgba(106,90,205,1.0)',\n    honeydew: 'rgba(240,255,240,1.0)', slategray: 'rgba(112,128,144,1.0)',\n    hotpink: 'rgba(255,105,180,1.0)', slategrey: 'rgba(112,128,144,1.0)',\n    indianred: 'rgba(205,92,92,1.0)', snow: 'rgba(255,250,250,1.0)',\n    indigo: 'rgba(75,0,130,1.0)', springgreen: 'rgba(0,255,127,1.0)',\n    ivory: 'rgba(255,255,240,1.0)', steelblue: 'rgba(70,130,180,1.0)',\n    khaki: 'rgba(240,230,140,1.0)', tan: 'rgba(210,180,140,1.0)',\n    lavender: 'rgba(230,230,250,1.0)', teal: 'rgba(0,128,128,1.0)',\n    lavenderblush: 'rgba(255,240,245,1.0)', thistle: 'rgba(216,191,216,1.0)',\n    lawngreen: 'rgba(124,252,0,1.0)', tomato: 'rgba(255,99,71,1.0)',\n    lemonchiffon: 'rgba(255,250,205,1.0)', turquoise: 'rgba(64,224,208,1.0)',\n    lightblue: 'rgba(173,216,230,1.0)', violet: 'rgba(238,130,238,1.0)',\n    lightcoral: 'rgba(240,128,128,1.0)', wheat: 'rgba(245,222,179,1.0)',\n    lightcyan: 'rgba(224,255,255,1.0)', white: 'rgba(255,255,255,1.0)',\n    lightgoldenrodyellow: 'rgba(250,250,210,1.0)', whitesmoke: 'rgba(245,245,245,1.0)',\n    lightgray: 'rgba(211,211,211,1.0)', yellow: 'rgba(255,255,0,1.0)',\n    lightgreen: 'rgba(144,238,144,1.0)', yellowgreen: 'rgba(154,205,50,1.0)',\n    lightgrey: 'rgba(211,211,211,1.0)',\n};\n/**** HexColor - converts a given color to #rrggbbaa ****/\nfunction HexColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        Color = ColorSet[lowerColor];\n    } // do not return here as color is now in RGBA format\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return Color + 'FF';\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return Color;\n    }\n    var HexDigit = '0123456789ABCDEF';\n    function dec2hex(Value) {\n        if (Value > 255) {\n            Value = 255;\n        }\n        return HexDigit[Math.trunc(Value / 16)] + HexDigit[Value % 16];\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; // not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) + 'FF');\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([01]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) +\n            dec2hex(parseFloat(Match[4])));\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** RGBAColor - converts a given color to RGBA(r,g,b,a) ****/\nfunction RGBAColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        return ColorSet[lowerColor]; // color is already in RGBA format\n    }\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ', 1' +\n            ')');\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ',' +\n            (parseInt(Color.slice(7), 16) / 255) +\n            ')');\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; //not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return Color.slice(0, Color.length - 1) + ',1)';\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([0]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return Color;\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** shortHexColor - converts a given color into #RRGGBB ****/\nfunction shortHexColor(Color) {\n    return HexColor(Color).slice(0, 7);\n}\n\nexport { ColorSet, FunctionWithName, HTMLsafe, HexColor, MarkDownSafe, ObjectIsEmpty, ObjectIsNotEmpty, ObjectMergedWith, Object_hasOwnProperty, Object_isPrototypeOf, Object_propertyIsEnumerable, Object_toLocaleString, Object_toString, Object_valueOf, RGBAColor, StringIsEmpty, StringIsNotEmpty, ValidatorForClassifier, ValueExists, ValueInheritsFrom, ValueIsAnonymousFunction, ValueIsArray, ValueIsBoolean, ValueIsCardinal, ValueIsColor, ValueIsDate, ValueIsEMailAddress, ValueIsEmptyString, ValueIsError, ValueIsFiniteNumber, ValueIsFunction, ValueIsInstanceOf, ValueIsInteger, ValueIsIntegerInRange, ValueIsList, ValueIsListSatisfying, ValueIsMissing, ValueIsNaN, ValueIsNamedFunction, ValueIsNativeFunction, ValueIsNonEmptyString, ValueIsNumber, ValueIsNumberInRange, ValueIsObject, ValueIsOneOf, ValueIsOrdinal, ValueIsPlainObject, ValueIsPromise, ValueIsRegExp, ValueIsScriptedFunction, ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline, ValueIsURL, ValueIsVanillaObject, ValuesAreEqual, ValuesDiffer, acceptNil, allowAnonymousFunction, allowArray, allowBoolean, allowCardinal, allowColor, allowDate, allowEMailAddress, allowError, allowFiniteNumber, allowFunction, allowInstanceOf, allowInteger, allowIntegerInRange, allowList, allowListSatisfying, allowNaN, allowNamedFunction, allowNativeFunction, allowNonEmptyString, allowNumber, allowNumberInRange, allowObject, allowOneOf, allowOrdinal, allowPlainObject, allowPromise, allowRegExp, allowScriptedFunction, allowString, allowStringMatching, allowText, allowTextline, allowURL, allowValueInheritingFrom, allowVanillaObject, allowedAnonymousFunction, allowedArray, allowedBoolean, allowedCardinal, allowedColor, allowedDate, allowedEMailAddress, allowedError, allowedFiniteNumber, allowedFunction, allowedInstanceOf, allowedInteger, allowedIntegerInRange, allowedList, allowedListSatisfying, allowedNaN, allowedNamedFunction, allowedNativeFunction, allowedNonEmptyString, allowedNumber, allowedNumberInRange, allowedObject, allowedOneOf, allowedOrdinal, allowedPlainObject, allowedPromise, allowedRegExp, allowedScriptedFunction, allowedString, allowedStringMatching, allowedText, allowedTextline, allowedURL, allowedValueInheritingFrom, allowedVanillaObject, constrained, escaped, expectAnonymousFunction, expectArray, expectBoolean, expectCardinal, expectColor, expectDate, expectEMailAddress, expectError, expectFiniteNumber, expectFunction, expectInstanceOf, expectInteger, expectIntegerInRange, expectList, expectListSatisfying, expectNaN, expectNamedFunction, expectNativeFunction, expectNonEmptyString, expectNumber, expectNumberInRange, expectObject, expectOneOf, expectOrdinal, expectPlainObject, expectPromise, expectRegExp, expectScriptedFunction, expectString, expectStringMatching, expectText, expectTextline, expectURL, expectValue, expectValueInheritingFrom, expectVanillaObject, expectedAnonymousFunction, expectedArray, expectedBoolean, expectedCardinal, expectedColor, expectedDate, expectedEMailAddress, expectedError, expectedFiniteNumber, expectedFunction, expectedInstanceOf, expectedInteger, expectedIntegerInRange, expectedList, expectedListSatisfying, expectedNaN, expectedNamedFunction, expectedNativeFunction, expectedNonEmptyString, expectedNumber, expectedNumberInRange, expectedObject, expectedOneOf, expectedOrdinal, expectedPlainObject, expectedPromise, expectedRegExp, expectedScriptedFunction, expectedString, expectedStringMatching, expectedText, expectedTextline, expectedURL, expectedValue, expectedValueInheritingFrom, expectedVanillaObject, global, quotable, quoted, rejectNil, shortHexColor, throwError, unescaped, validatedArgument };\n//# sourceMappingURL=javascript-interface-library.esm.js.map\n","//----------------------------------------------------------------------------//\n//                        Svelte Coordinate Conversion                        //\n//----------------------------------------------------------------------------//\nfunction fromViewportTo(System, originalPosition, Target) {\n    switch (true) {\n        case (originalPosition == null):\n            throw new Error('no \"Position\" given');\n        case (typeof originalPosition.left !== 'number') && !(originalPosition.left instanceof Number):\n        case (typeof originalPosition.top !== 'number') && !(originalPosition.top instanceof Number):\n            throw new Error('invalid \"Position\" given');\n    }\n    switch (System) {\n        case null:\n        case undefined:\n            throw new Error('no coordinate system given');\n        // @ts-ignore the following check is for non-TypeScript applications only\n        case 'viewport':\n            return { left: originalPosition.left, top: originalPosition.top };\n        case 'document':\n            return {\n                left: originalPosition.left + window.scrollX,\n                top: originalPosition.top + window.scrollY\n            };\n        case 'local':\n            switch (true) {\n                case (Target == null):\n                    throw new Error('no target element given');\n                case (Target instanceof Element):\n                    var computedStyle = window.getComputedStyle(Target);\n                    var leftOffset = parseFloat(computedStyle.borderLeftWidth);\n                    var topOffset = parseFloat(computedStyle.borderTopWidth);\n                    var TargetPositionInViewport = Target.getBoundingClientRect();\n                    return {\n                        left: originalPosition.left - TargetPositionInViewport.left - leftOffset,\n                        top: originalPosition.top - TargetPositionInViewport.top - topOffset\n                    };\n                default:\n                    throw new Error('invalid target element given');\n            }\n        default:\n            throw new Error('invalid coordinate system given');\n    }\n}\nfunction fromDocumentTo(System, originalPosition, Target) {\n    switch (true) {\n        case (originalPosition == null):\n            throw new Error('no \"Position\" given');\n        case (typeof originalPosition.left !== 'number') && !(originalPosition.left instanceof Number):\n        case (typeof originalPosition.top !== 'number') && !(originalPosition.top instanceof Number):\n            throw new Error('invalid \"Position\" given');\n    }\n    switch (System) {\n        case null:\n        case undefined:\n            throw new Error('no coordinate system given');\n        case 'viewport':\n            return {\n                left: originalPosition.left - window.scrollX,\n                top: originalPosition.top - window.scrollY\n            };\n        // @ts-ignore the following check is for non-TypeScript applications only\n        case 'document':\n            return { left: originalPosition.left, top: originalPosition.top };\n        case 'local':\n            switch (true) {\n                case (Target == null):\n                    throw new Error('no target element given');\n                case (Target instanceof Element):\n                    var computedStyle = window.getComputedStyle(Target);\n                    var leftOffset = parseFloat(computedStyle.borderLeftWidth);\n                    var topOffset = parseFloat(computedStyle.borderTopWidth);\n                    var TargetPositionInViewport = Target.getBoundingClientRect();\n                    return {\n                        left: originalPosition.left + window.scrollX - TargetPositionInViewport.left - leftOffset,\n                        top: originalPosition.top + window.scrollY - TargetPositionInViewport.top - topOffset\n                    };\n                default:\n                    throw new Error('invalid target element given');\n            }\n        default:\n            throw new Error('invalid coordinate system given');\n    }\n}\nfunction fromLocalTo(System, originalPosition, Source) {\n    switch (true) {\n        case (originalPosition == null):\n            throw new Error('no \"Position\" given');\n        case (typeof originalPosition.left !== 'number') && !(originalPosition.left instanceof Number):\n        case (typeof originalPosition.top !== 'number') && !(originalPosition.top instanceof Number):\n            throw new Error('invalid \"Position\" given');\n    }\n    var SourcePositionInViewport, leftPosition, topPosition;\n    switch (true) {\n        case (Source == null):\n            throw new Error('no source element given');\n        case (Source instanceof Element):\n            var computedStyle = window.getComputedStyle(Source);\n            var leftOffset = parseFloat(computedStyle.borderLeftWidth);\n            var topOffset = parseFloat(computedStyle.borderTopWidth);\n            SourcePositionInViewport = Source.getBoundingClientRect();\n            leftPosition = SourcePositionInViewport.left + leftOffset;\n            topPosition = SourcePositionInViewport.top + topOffset;\n            break;\n        default:\n            throw new Error('invalid source element given');\n    }\n    switch (System) {\n        case null:\n        case undefined:\n            throw new Error('no coordinate system given');\n        case 'viewport':\n            return {\n                left: originalPosition.left + leftPosition,\n                top: originalPosition.top + topPosition\n            };\n        case 'document':\n            return {\n                left: originalPosition.left + leftPosition + window.scrollX,\n                top: originalPosition.top + topPosition + window.scrollY\n            };\n        // @ts-ignore the following check is for non-TypeScript applications only\n        case 'local':\n            return { left: originalPosition.left, top: originalPosition.top };\n        default:\n            throw new Error('invalid coordinate system given');\n    }\n}\nvar svelteCoordinateConversion = {\n    fromViewportTo: fromViewportTo,\n    fromDocumentTo: fromDocumentTo,\n    fromLocalTo: fromLocalTo\n};\n\nexport default svelteCoordinateConversion;\n//# sourceMappingURL=svelte-coordinate-conversion.esm.js.map\n","import { global, allowedPlainObject, throwError, ValueIsNonEmptyString, allowedNonEmptyString, ValueIsFunction, allowedFiniteNumber, ValueIsPlainObject, ValueIsFiniteNumber, allowedFunction, constrained, ValueIsString, ObjectIsNotEmpty, allowPlainObject, quoted, allowedIntegerInRange, ValueIsOneOf, allowedString, allowListSatisfying } from 'javascript-interface-library';\nimport Conversion from 'svelte-coordinate-conversion';\n\n//----------------------------------------------------------------------------//\nvar Context = ( // make this package a REAL singleton\n'__DragAndDropActions' in global\n    ? global.__DragAndDropActions\n    : global.__DragAndDropActions = {});\n/**** parsedDraggableOptions ****/\nfunction parsedDraggableOptions(Options) {\n    Options = allowedPlainObject('drag options', Options) || {};\n    var Extras, relativeTo;\n    var onlyFrom, neverFrom;\n    var Dummy, DummyOffsetX, DummyOffsetY;\n    var minX, minY, maxX, maxY;\n    var onDragStart, onDragMove, onDragEnd, onDragCancel;\n    Extras = Options.Extras;\n    switch (true) {\n        case (Options.relativeTo == null):\n            relativeTo = 'parent';\n            break;\n        case (Options.relativeTo === 'parent'):\n        case (Options.relativeTo === 'body'):\n        case ValueIsNonEmptyString(Options.relativeTo):\n        case (Options.relativeTo instanceof HTMLElement):\n        case (Options.relativeTo instanceof SVGElement):\n            //    case (Options.relativeTo instanceof MathMLElement):\n            relativeTo = Options.relativeTo;\n            break;\n        default: throwError('InvalidArgument: invalid position reference given');\n    }\n    onlyFrom = allowedNonEmptyString('\"onlyFrom\" CSS selector', Options.onlyFrom);\n    neverFrom = allowedNonEmptyString('\"neverFrom\" CSS selector', Options.neverFrom);\n    switch (true) {\n        case (Options.Dummy == null):\n            Dummy = undefined;\n            break;\n        case (Options.Dummy === 'standard'):\n        case (Options.Dummy === 'none'):\n        case ValueIsNonEmptyString(Options.Dummy):\n        case (Options.Dummy instanceof HTMLElement):\n        case (Options.Dummy instanceof SVGElement):\n        //    case (Options.Dummy instanceof MathMLElement):\n        case ValueIsFunction(Options.Dummy):\n            Dummy = Options.Dummy;\n            break;\n        default: throwError('InvalidArgument: invalid drag dummy specification given');\n    }\n    DummyOffsetX = allowedFiniteNumber('dummy x offset', Options.DummyOffsetX);\n    DummyOffsetY = allowedFiniteNumber('dummy y offset', Options.DummyOffsetY);\n    minX = allowedFiniteNumber('min. x position', Options.minX);\n    if (minX == null) {\n        minX = -Infinity;\n    }\n    minY = allowedFiniteNumber('min. y position', Options.minY);\n    if (minY == null) {\n        minY = -Infinity;\n    }\n    maxX = allowedFiniteNumber('max. x position', Options.maxX);\n    if (maxX == null) {\n        maxX = Infinity;\n    }\n    maxY = allowedFiniteNumber('max. y position', Options.maxY);\n    if (maxY == null) {\n        maxY = Infinity;\n    }\n    if (ValueIsPosition(Options.onDragStart)) {\n        var _a = Options.onDragStart, x_1 = _a.x, y_1 = _a.y;\n        onDragStart = function () { return ({ x: x_1, y: y_1 }); };\n    }\n    else {\n        onDragStart = allowedFunction('\"onDragStart\" handler', Options.onDragStart);\n    }\n    onDragMove = allowedFunction('\"onDragMove\" handler', Options.onDragMove);\n    onDragEnd = allowedFunction('\"onDragEnd\" handler', Options.onDragEnd);\n    return {\n        Extras: Extras,\n        relativeTo: relativeTo,\n        onlyFrom: onlyFrom,\n        neverFrom: neverFrom,\n        Dummy: Dummy,\n        DummyOffsetX: DummyOffsetX,\n        DummyOffsetY: DummyOffsetY,\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n        // @ts-ignore we cannot validate given functions any further\n        onDragStart: onDragStart,\n        onDragMove: onDragMove,\n        onDragEnd: onDragEnd,\n        onDragCancel: onDragCancel\n    };\n}\n/**** use:asDraggable={options} ****/\nfunction asDraggable(Element, Options) {\n    var isDragged;\n    var currentDraggableOptions;\n    var PositionReference; // element with user coordinate system\n    var ReferenceDeltaX, ReferenceDeltaY; // mouse -> user coord.s\n    var PositioningWasDelayed; // workaround for prob. with \"drag\" events\n    var DragImage;\n    var initialPosition; // given in user coordinates\n    var lastPosition; // dto.\n    isDragged = false;\n    currentDraggableOptions = parsedDraggableOptions(Options);\n    /**** startDragging ****/\n    function startDragging(originalEvent) {\n        var Options = currentDraggableOptions;\n        if (fromForbiddenElement(Element, Options, originalEvent)) {\n            originalEvent.stopPropagation();\n            originalEvent.preventDefault();\n            return false;\n        }\n        PositionReference = PositionReferenceFor(Element, Options);\n        var relativePosition = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, PositionReference); // relative to reference element\n        ReferenceDeltaX = ReferenceDeltaY = 0;\n        initialPosition = { x: 0, y: 0 };\n        if (Options.onDragStart == null) {\n            initialPosition = { x: 0, y: 0 }; // given in user coordinates\n        }\n        else {\n            try {\n                var StartPosition = Options.onDragStart(Options.Extras);\n                if (ValueIsPlainObject(StartPosition)) {\n                    var x = allowedFiniteNumber('x start position', StartPosition.x);\n                    var y = allowedFiniteNumber('y start position', StartPosition.y);\n                    ReferenceDeltaX = x - relativePosition.left;\n                    ReferenceDeltaY = y - relativePosition.top;\n                    x = constrained(x, Options.minX, Options.maxX);\n                    y = constrained(y, Options.minY, Options.maxY);\n                    initialPosition = { x: x, y: y }; // given in user coordinates\n                }\n            }\n            catch (Signal) {\n                console.error('\"onDragStart\" handler failed', Signal);\n            }\n        }\n        lastPosition = initialPosition;\n        PositioningWasDelayed = false; // initializes workaround\n        if (Options.Dummy == null) {\n            Options.Dummy = 'none'; // this is the default for \"use.asDraggable\"\n        }\n        DragImage = DragImageFor(Element, Options);\n        if ((DragImage != null) && (originalEvent.dataTransfer != null)) {\n            var OffsetX = Options.DummyOffsetX;\n            var OffsetY = Options.DummyOffsetY;\n            if ((OffsetX == null) || (OffsetY == null)) {\n                var PositionInDraggable = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element);\n                if (OffsetX == null) {\n                    OffsetX = PositionInDraggable.left;\n                }\n                if (OffsetY == null) {\n                    OffsetY = PositionInDraggable.top;\n                }\n            }\n            switch (true) {\n                case (Options.Dummy === 'none'):\n                    originalEvent.dataTransfer.setDragImage(DragImage, 0, 0);\n                    setTimeout(function () {\n                        document.body.removeChild(DragImage);\n                    }, 0);\n                    break;\n                case ValueIsString(Options.Dummy):\n                    originalEvent.dataTransfer.setDragImage(DragImage, OffsetX, OffsetY);\n                    setTimeout(function () {\n                        document.body.removeChild(DragImage.parentElement);\n                    }, 0);\n                    break;\n                default:\n                    originalEvent.dataTransfer.setDragImage(DragImage, OffsetX, OffsetY);\n            }\n        }\n        if (originalEvent.dataTransfer != null) {\n            originalEvent.dataTransfer.effectAllowed = 'none';\n        }\n        isDragged = true;\n        setTimeout(function () { return Element.classList.add('dragged'); }, 0);\n        originalEvent.stopPropagation();\n    }\n    /**** continueDragging ****/\n    function continueDragging(originalEvent) {\n        if (!isDragged) {\n            return false;\n        }\n        var Options = currentDraggableOptions;\n        if ((originalEvent.screenX === 0) && (originalEvent.screenY === 0) &&\n            !PositioningWasDelayed) {\n            PositioningWasDelayed = true; // last \"drag\" event contains wrong coord.s\n        }\n        else {\n            PositioningWasDelayed = false;\n            var relativePosition = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, PositionReference); // relative to reference element\n            var x = relativePosition.left + ReferenceDeltaX; // in user coordinates\n            var y = relativePosition.top + ReferenceDeltaY;\n            x = constrained(x, Options.minX, Options.maxX);\n            y = constrained(y, Options.minY, Options.maxY);\n            var dx = x - lastPosition.x; // calculated AFTER constraining x,y\n            var dy = y - lastPosition.y; // dto.\n            lastPosition = { x: x, y: y };\n            invokeHandler('onDragMove', Options, x, y, dx, dy, Options.Extras);\n        }\n        originalEvent.stopPropagation();\n    }\n    /**** finishDragging ****/\n    function finishDragging(originalEvent) {\n        if (!isDragged) {\n            return false;\n        }\n        //    continueDragging(originalEvent)           // NO! positions might be wrong!\n        var Options = currentDraggableOptions;\n        if (Options.onDragEnd != null) {\n            var x = constrained(lastPosition.x, Options.minX, Options.maxX);\n            var y = constrained(lastPosition.y, Options.minY, Options.maxY);\n            var dx = x - lastPosition.x;\n            var dy = y - lastPosition.y;\n            invokeHandler('onDragEnd', Options, x, y, dx, dy, Options.Extras);\n        }\n        isDragged = false;\n        Element.classList.remove('dragged');\n        originalEvent.stopPropagation();\n    }\n    /**** updateDraggableOptions ****/\n    function updateDraggableOptions(Options) {\n        Options = parsedDraggableOptions(Options);\n        if ((currentDraggableOptions.Extras == null) && (Options.Extras != null)) {\n            currentDraggableOptions.Extras = Options.Extras;\n        } // Extras may be set with delay, but remain constant afterwards\n        currentDraggableOptions.Dummy = (Options.Dummy || currentDraggableOptions.Dummy);\n        currentDraggableOptions.minX = Options.minX;\n        currentDraggableOptions.minY = Options.minY;\n        currentDraggableOptions.maxX = Options.maxX;\n        currentDraggableOptions.maxY = Options.maxY;\n        currentDraggableOptions.onDragStart = (Options.onDragStart || currentDraggableOptions.onDragStart); // may be used to update initial position for subsequent drags\n    }\n    Element.setAttribute('draggable', 'true');\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragstart', startDragging);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drag', continueDragging);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragend', finishDragging);\n    return { update: updateDraggableOptions };\n}\n/**** fromForbiddenElement ****/\nfunction fromForbiddenElement(Element, Options, originalEvent) {\n    if ((Options.onlyFrom != null) || (Options.neverFrom != null)) {\n        var x = originalEvent.clientX;\n        var y = originalEvent.clientY;\n        var touchedElement = document.elementFromPoint(x, y);\n        //    elementFromPoint considers elements with \"pointer-events\" <> \"none\" only\n        //    but sometimes, \"pointer-events:none\" is needed for proper operation\n        touchedElement = innerElementOf(touchedElement, x, y);\n        if (Options.onlyFrom != null) {\n            var fromElement = touchedElement.closest(Options.onlyFrom);\n            if ((Element !== fromElement) && !Element.contains(fromElement)) {\n                return true;\n            }\n        }\n        if (Options.neverFrom != null) {\n            var fromElement = touchedElement.closest(Options.neverFrom);\n            if ((Element === fromElement) || Element.contains(fromElement)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**** innerElementOf ****/\nfunction innerElementOf(Candidate, x, y) {\n    var innerElements = Candidate.children;\n    for (var i = 0, l = innerElements.length; i < l; i++) {\n        var innerElement = innerElements[i];\n        var Position = Conversion.fromLocalTo('viewport', { left: 0, top: 0 }, innerElement);\n        if ((x < Position.left) || (y < Position.top)) {\n            continue;\n        }\n        if (x > Position.left + innerElement.offsetWidth - 1) {\n            continue;\n        }\n        if (y > Position.top + innerElement.offsetHeight - 1) {\n            continue;\n        }\n        return innerElementOf(innerElement, x, y);\n    }\n    return Candidate; // this is the innermost element at (x,y)\n}\n//-------------------------------------------------------------------------------\n//--               use:asDroppable={options} - \"drag\" and \"drop\"               --\n//-------------------------------------------------------------------------------\nvar DropOperations = ['copy', 'move', 'link'];\n/**** parsedDroppableOptions ****/\nfunction parsedDroppableOptions(Options) {\n    Options = allowedPlainObject('drop options', Options) || {};\n    var Operations, DataToOffer;\n    var onDropZoneEnter, onDropZoneHover, onDropZoneLeave;\n    var onDropped;\n    Operations = parsedOperations('list of allowed operations', Options.Operations, 'copy');\n    DataToOffer = Object.assign({}, allowedPlainObject('data to be offered', Options.DataToOffer));\n    if ('none' in DataToOffer)\n        throwError('InvalidArgument: \"none\" is not a valid data type');\n    onDropZoneEnter = allowedFunction('\"onDropZoneEnter\" handler', Options.onDropZoneEnter);\n    onDropZoneHover = allowedFunction('\"onDropZoneHover\" handler', Options.onDropZoneHover);\n    onDropZoneLeave = allowedFunction('\"onDropZoneLeave\" handler', Options.onDropZoneLeave);\n    onDropped = allowedFunction('\"onDropped\" handler', Options.onDropped);\n    return {\n        Operations: Operations,\n        DataToOffer: DataToOffer,\n        // @ts-ignore we cannot validate given functions any further\n        onDropZoneEnter: onDropZoneEnter,\n        onDropZoneHover: onDropZoneHover,\n        onDropZoneLeave: onDropZoneLeave,\n        onDropped: onDropped\n    };\n}\n/**** use:asDroppable={options} ****/\nfunction asDroppable(Element, Options) {\n    var isDragged;\n    var currentDraggableOptions;\n    var currentDroppableOptions;\n    var PositionReference; // element with user coordinate system\n    var ReferenceDeltaX, ReferenceDeltaY; // mouse -> user coord.s\n    var PositioningWasDelayed; // workaround for prob. with \"drag\" events\n    var DragImage;\n    var initialPosition; // given in user coordinates\n    var lastPosition; // dto.\n    var lastDropZoneElement;\n    var lastDropZoneExtras;\n    isDragged = false;\n    currentDraggableOptions = parsedDraggableOptions(Options);\n    currentDroppableOptions = parsedDroppableOptions(Options);\n    /**** startDragging ****/\n    function startDragging(originalEvent) {\n        var Options = Object.assign({}, currentDraggableOptions, currentDroppableOptions);\n        if (fromForbiddenElement(Element, Options, originalEvent)) {\n            originalEvent.stopPropagation();\n            originalEvent.preventDefault();\n            return false;\n        }\n        PositionReference = PositionReferenceFor(Element, Options);\n        var relativePosition = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, PositionReference); // relative to reference element\n        ReferenceDeltaX = ReferenceDeltaY = 0;\n        initialPosition = { x: 0, y: 0 };\n        if (Options.onDragStart == null) {\n            initialPosition = { x: 0, y: 0 }; // given in user coordinates\n        }\n        else {\n            try {\n                var StartPosition = Options.onDragStart(Options.Extras);\n                if (ValueIsPlainObject(StartPosition)) {\n                    var x = allowedFiniteNumber('x start position', StartPosition.x);\n                    var y = allowedFiniteNumber('y start position', StartPosition.y);\n                    ReferenceDeltaX = x - relativePosition.left;\n                    ReferenceDeltaY = y - relativePosition.top;\n                    x = constrained(x, Options.minX, Options.maxX);\n                    y = constrained(y, Options.minY, Options.maxY);\n                    initialPosition = { x: x, y: y }; // given in user coordinates\n                }\n            }\n            catch (Signal) {\n                console.error('\"onDragStart\" handler failed', Signal);\n            }\n        }\n        lastPosition = initialPosition;\n        lastDropZoneElement = undefined;\n        lastDropZoneExtras = undefined;\n        PositioningWasDelayed = false; // initializes workaround\n        if (Options.Dummy == null) {\n            Options.Dummy = 'standard'; // this is the default for \"use.asDroppable\"\n        }\n        DragImage = DragImageFor(Element, Options);\n        if ((DragImage != null) && (originalEvent.dataTransfer != null)) {\n            var OffsetX = Options.DummyOffsetX;\n            var OffsetY = Options.DummyOffsetY;\n            if ((OffsetX == null) || (OffsetY == null)) {\n                var PositionInDraggable = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element);\n                if (OffsetX == null) {\n                    OffsetX = PositionInDraggable.left;\n                }\n                if (OffsetY == null) {\n                    OffsetY = PositionInDraggable.top;\n                }\n            }\n            switch (true) {\n                case (Options.Dummy === 'none'):\n                    originalEvent.dataTransfer.setDragImage(DragImage, 0, 0);\n                    setTimeout(function () {\n                        document.body.removeChild(DragImage);\n                    }, 0);\n                    break;\n                case ValueIsString(Options.Dummy):\n                    originalEvent.dataTransfer.setDragImage(DragImage, OffsetX, OffsetY);\n                    setTimeout(function () {\n                        document.body.removeChild(DragImage.parentElement);\n                    }, 0);\n                    break;\n                default:\n                    originalEvent.dataTransfer.setDragImage(DragImage, OffsetX, OffsetY);\n            }\n        }\n        if (originalEvent.dataTransfer != null) {\n            var allowedEffects = allowedEffectsFrom(Options.Operations);\n            originalEvent.dataTransfer.effectAllowed = allowedEffects;\n            if (ObjectIsNotEmpty(Options.DataToOffer)) {\n                for (var Type in Options.DataToOffer) {\n                    if (Options.DataToOffer.hasOwnProperty(Type)) {\n                        originalEvent.dataTransfer.setData(Type, Options.DataToOffer[Type]);\n                    }\n                }\n            }\n        }\n        Context.currentDroppableExtras = Options.Extras;\n        Context.currentDropZoneExtras = undefined;\n        Context.currentDropZonePosition = undefined;\n        Context.DroppableWasDropped = false;\n        Context.currentDropOperation = undefined;\n        Context.currentTypeTransferred = undefined;\n        Context.currentDataTransferred = undefined;\n        isDragged = true;\n        setTimeout(function () { return Element.classList.add('dragged'); }, 0);\n        originalEvent.stopPropagation();\n    }\n    /**** continueDragging ****/\n    function continueDragging(originalEvent) {\n        if (!isDragged) {\n            return false;\n        }\n        var Options = Object.assign({}, currentDraggableOptions, currentDroppableOptions);\n        if ((originalEvent.screenX === 0) && (originalEvent.screenY === 0) &&\n            !PositioningWasDelayed) {\n            PositioningWasDelayed = true; // last \"drag\" event contains wrong coord.s\n        }\n        else {\n            PositioningWasDelayed = false;\n            var relativePosition = Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, PositionReference); // relative to reference element\n            var x = relativePosition.left + ReferenceDeltaX; // in user coordinates\n            var y = relativePosition.top + ReferenceDeltaY;\n            x = constrained(x, Options.minX, Options.maxX);\n            y = constrained(y, Options.minY, Options.maxY);\n            var dx = x - lastPosition.x; // calculated AFTER constraining x,y\n            var dy = y - lastPosition.y; // dto.\n            lastPosition = { x: x, y: y };\n            invokeHandler('onDragMove', Options, x, y, dx, dy, Options.Extras);\n        }\n        if (Context.currentDropZoneElement === lastDropZoneElement) {\n            if (Context.currentDropZoneElement != null) {\n                invokeHandler('onDropZoneHover', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, Context.currentDropZoneExtras, Options.Extras);\n            }\n        }\n        else {\n            if (Context.currentDropZoneElement == null) {\n                Element.classList.remove('droppable');\n                invokeHandler('onDropZoneLeave', Options, lastDropZoneExtras, Options.Extras);\n            }\n            else {\n                Element.classList.add('droppable');\n                invokeHandler('onDropZoneEnter', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, lastDropZoneExtras, Options.Extras);\n            }\n            lastDropZoneElement = Context.currentDropZoneElement;\n            lastDropZoneExtras = Context.currentDropZoneExtras;\n        }\n        originalEvent.stopPropagation();\n    }\n    /**** finishDragging ****/\n    function finishDragging(originalEvent) {\n        if (!isDragged) {\n            return false;\n        }\n        //    continueDragging(originalEvent)           // NO! positions might be wrong!\n        var Options = Object.assign({}, currentDraggableOptions, currentDroppableOptions);\n        if (Context.DroppableWasDropped) {\n            invokeHandler('onDropped', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, Context.currentDropOperation, Context.currentTypeTransferred, Context.currentDataTransferred, Context.currentDropZoneExtras, Options.Extras);\n            Context.currentDropZoneExtras = undefined;\n            Context.currentDropZonePosition = undefined;\n            Context.DroppableWasDropped = false;\n            Context.currentDropOperation = undefined;\n            Context.currentTypeTransferred = undefined;\n            Context.currentDataTransferred = undefined;\n        }\n        if (Options.onDragEnd != null) {\n            var x = constrained(lastPosition.x, Options.minX, Options.maxX);\n            var y = constrained(lastPosition.y, Options.minY, Options.maxY);\n            var dx = x - lastPosition.x;\n            var dy = y - lastPosition.y;\n            invokeHandler('onDragEnd', Options, x, y, dx, dy, Options.Extras);\n        }\n        Context.currentDroppableExtras = undefined;\n        isDragged = false;\n        Element.classList.remove('dragged', 'droppable');\n        originalEvent.stopPropagation();\n    }\n    /**** updateDraggableOptions ****/\n    function updateDraggableOptions(Options) {\n        Options = parsedDraggableOptions(Options);\n        if ((currentDraggableOptions.Extras == null) && (Options.Extras != null)) {\n            currentDraggableOptions.Extras = Options.Extras;\n        } // Extras may be set with delay, but remain constant afterwards\n        currentDraggableOptions.Dummy = (Options.Dummy || currentDraggableOptions.Dummy);\n        currentDraggableOptions.minX = Options.minX;\n        currentDraggableOptions.minY = Options.minY;\n        currentDraggableOptions.maxX = Options.maxX;\n        currentDraggableOptions.maxY = Options.maxY;\n        currentDraggableOptions.onDragStart = (Options.onDragStart || currentDraggableOptions.onDragStart); // may be used to update initial position for subsequent drags\n    }\n    /**** updateDroppableOptions ****/\n    function updateDroppableOptions(Options) {\n        Options = parsedDroppableOptions(Options);\n        currentDroppableOptions.Operations = Options.Operations;\n        currentDroppableOptions.DataToOffer = Options.DataToOffer;\n    }\n    Element.setAttribute('draggable', 'true');\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragstart', startDragging);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drag', continueDragging);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragend', finishDragging);\n    return {\n        update: function (Options) {\n            updateDraggableOptions(Options);\n            updateDroppableOptions(Options);\n        }\n    };\n}\n/**** parsedDropZoneOptions ****/\nfunction parsedDropZoneOptions(Options) {\n    Options = allowedPlainObject('drop zone options', Options) || {};\n    var Extras, TypesToAccept, HoldDelay;\n    var onDroppableEnter, onDroppableMove, onDroppableLeave;\n    var onDroppableHold, onDroppableRelease, onDrop;\n    Extras = Options.Extras;\n    allowPlainObject('data types to be accepted', Options.TypesToAccept);\n    TypesToAccept = Object.create(null);\n    if ((Options.TypesToAccept != null) && ('none' in Options.TypesToAccept))\n        throwError('InvalidArgument: \"none\" is not a valid data type');\n    for (var Type in Options.TypesToAccept) {\n        if (Options.TypesToAccept.hasOwnProperty(Type)) {\n            TypesToAccept[Type] = parsedOperations('list of accepted operations for type ' + quoted(Type), Options.TypesToAccept[Type]);\n        }\n    }\n    HoldDelay = allowedIntegerInRange('min. time to hold', Options.HoldDelay, 0);\n    onDroppableEnter = allowedFunction('\"onDroppableEnter\" handler', Options.onDroppableEnter);\n    onDroppableMove = allowedFunction('\"onDroppableMove\" handler', Options.onDroppableMove);\n    onDroppableLeave = allowedFunction('\"onDroppableLeave\" handler', Options.onDroppableLeave);\n    onDroppableHold = allowedFunction('\"onDroppableHold\" handler', Options.onDroppableHold);\n    onDroppableRelease = allowedFunction('\"onDroppableRelease\" handler', Options.onDroppableRelease);\n    onDrop = allowedFunction('\"onDrop\" handler', Options.onDrop);\n    return {\n        Extras: Extras,\n        TypesToAccept: TypesToAccept,\n        HoldDelay: HoldDelay,\n        // @ts-ignore we cannot validate given functions any further\n        onDroppableEnter: onDroppableEnter,\n        onDroppableMove: onDroppableMove,\n        onDroppableLeave: onDroppableLeave,\n        // @ts-ignore we cannot validate given functions any further\n        onDroppableHold: onDroppableHold,\n        onDroppableRelease: onDroppableRelease,\n        onDrop: onDrop\n    };\n}\n/**** use:asDropZone={options} ****/\nfunction asDropZone(Element, Options) {\n    var currentDropZoneOptions;\n    currentDropZoneOptions = parsedDropZoneOptions(Options);\n    /**** enteredByDroppable ****/\n    function enteredByDroppable(originalEvent) {\n        if ((originalEvent.dataTransfer == null) ||\n            (originalEvent.dataTransfer.effectAllowed === 'none')) {\n            return;\n        }\n        var Options = currentDropZoneOptions;\n        var wantedOperation = originalEvent.dataTransfer.dropEffect;\n        if (wantedOperation === 'none') { // workaround for browser bug\n            switch (originalEvent.dataTransfer.effectAllowed) {\n                case 'copy':\n                case 'move':\n                case 'link':\n                    wantedOperation = originalEvent.dataTransfer.effectAllowed;\n                    break;\n                default:\n                    wantedOperation = undefined;\n            }\n        }\n        var TypesToAccept = Options.TypesToAccept;\n        var offeredTypeList = originalEvent.dataTransfer.types.filter(function (Type) {\n            return (Type in TypesToAccept) &&\n                (TypesToAccept[Type] !== '');\n        } // \"getData\" is not available here\n        ); // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n        if (offeredTypeList.length === 0) {\n            return;\n        }\n        var DropZonePosition = asPosition(Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element)); // relative to DropZone element\n        var accepted = ResultOfHandler('onDroppableEnter', Options, DropZonePosition.x, DropZonePosition.y, wantedOperation, offeredTypeList, Context.currentDroppableExtras, Options.Extras);\n        if (accepted === false) { // i.e. explicit \"false\" result required\n            return;\n        }\n        else {\n            Context.currentDropZoneExtras = Options.Extras;\n            Context.currentDropZoneElement = Element;\n            Context.currentDropZonePosition = DropZonePosition;\n            Element.classList.add('hovered');\n            originalEvent.preventDefault();\n            originalEvent.stopPropagation();\n        }\n    }\n    /**** hoveredByDroppable ****/\n    function hoveredByDroppable(originalEvent) {\n        if ((originalEvent.dataTransfer == null) ||\n            (originalEvent.dataTransfer.effectAllowed === 'none') ||\n            (Context.currentDropZoneElement != null) && (Context.currentDropZoneElement !== Element)) {\n            Element.classList.remove('hovered');\n            return;\n        }\n        // in some browsers, it may be that (currentDropZone !== Element)!\n        var Options = currentDropZoneOptions;\n        var wantedOperation = originalEvent.dataTransfer.dropEffect;\n        if (wantedOperation === 'none') { // workaround for browser bug\n            switch (originalEvent.dataTransfer.effectAllowed) {\n                case 'copy':\n                case 'move':\n                case 'link':\n                    wantedOperation = originalEvent.dataTransfer.effectAllowed;\n                    break;\n                default:\n                    wantedOperation = undefined;\n            }\n        }\n        var TypesToAccept = Options.TypesToAccept;\n        var offeredTypeList = originalEvent.dataTransfer.types.filter(function (Type) {\n            return (Type in TypesToAccept) &&\n                (TypesToAccept[Type] !== '');\n        } // \"getData\" is not available here\n        ); // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n        if (offeredTypeList.length === 0) {\n            if (Context.currentDropZoneElement === Element) {\n                Context.currentDropZoneExtras = undefined;\n                Context.currentDropZoneElement = undefined;\n                Context.currentDropZonePosition = undefined;\n            }\n            Element.classList.remove('hovered');\n            return;\n        }\n        Context.currentDropZonePosition = asPosition(Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element)); // relative to DropZone element\n        var accepted = ResultOfHandler('onDroppableMove', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, wantedOperation, offeredTypeList, Context.currentDroppableExtras, Options.Extras);\n        if (accepted === false) { // i.e. explicit \"false\" result required\n            Context.currentDropZoneExtras = undefined;\n            Context.currentDropZoneElement = undefined;\n            Context.currentDropZonePosition = undefined;\n            Element.classList.remove('hovered');\n        }\n        else { // warning: sometimes (currentDropZone !== Element)!\n            Context.currentDropZoneExtras = Options.Extras;\n            Context.currentDropZoneElement = Element;\n            //      Context.currentDropZonePosition has already been set before\n            Element.classList.add('hovered');\n            originalEvent.preventDefault(); // never allow default action!\n            //      originalEvent.stopPropagation()\n            return false; // special return value when drop seems acceptable\n        }\n    }\n    /**** leftByDroppable ****/\n    function leftByDroppable(originalEvent) {\n        Element.classList.remove('hovered');\n        var Options = currentDropZoneOptions;\n        if (Context.currentDropZoneElement === Element) {\n            if (Context.currentTypeTransferred == null) { // see explanation below\n                Context.currentDropZoneExtras = undefined;\n                Context.currentDropZoneElement = undefined;\n                Context.DroppableWasDropped = false;\n                Context.currentDropZonePosition = undefined;\n                Context.currentTypeTransferred = undefined;\n                Context.currentDataTransferred = undefined;\n                invokeHandler('onDroppableLeave', Options, Context.currentDroppableExtras, Options.Extras);\n            } // swallow \"dragleave\" right after successful \"drop\"\n            originalEvent.preventDefault();\n            originalEvent.stopPropagation();\n        }\n    }\n    /**** droppedByDroppable ****/\n    function droppedByDroppable(originalEvent) {\n        Element.classList.remove('hovered');\n        if ((originalEvent.dataTransfer == null) ||\n            (originalEvent.dataTransfer.effectAllowed === 'none') ||\n            (Context.currentDropZoneElement !== Element)) {\n            return;\n        }\n        //    originalEvent.preventDefault()\n        originalEvent.stopPropagation();\n        var Options = currentDropZoneOptions;\n        var wantedOperation = originalEvent.dataTransfer.dropEffect;\n        if (wantedOperation === 'none') { // workaround for browser bug\n            switch (originalEvent.dataTransfer.effectAllowed) {\n                case 'copy':\n                case 'move':\n                case 'link':\n                    wantedOperation = originalEvent.dataTransfer.effectAllowed;\n                    break;\n                default:\n                    wantedOperation = undefined;\n            }\n        }\n        var TypesToAccept = Options.TypesToAccept;\n        var offeredTypeList = originalEvent.dataTransfer.types.filter(function (Type) {\n            return (Type in TypesToAccept) && ((wantedOperation == null) ||\n                (TypesToAccept[Type].indexOf(wantedOperation) >= 0));\n        }); // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n        if (offeredTypeList.length === 0) {\n            Context.currentDropZoneExtras = undefined;\n            Context.currentDropZonePosition = undefined;\n            Context.DroppableWasDropped = false;\n            Context.currentDropOperation = undefined;\n            Context.currentTypeTransferred = undefined;\n            Context.currentDataTransferred = undefined;\n            invokeHandler('onDroppableLeave', Options, Context.currentDroppableExtras, Options.Extras);\n            return;\n        }\n        Context.currentDropZonePosition = asPosition(Conversion.fromDocumentTo('local', { left: originalEvent.pageX, top: originalEvent.pageY }, Element)); // relative to DropZone element\n        var offeredData = {};\n        offeredTypeList.forEach(\n        // @ts-ignore originalEvent.dataTransfer definitely exists\n        function (Type) { return offeredData[Type] = originalEvent.dataTransfer.getData(Type); });\n        var acceptedType = ResultOfHandler('onDrop', Options, Context.currentDropZonePosition.x, Context.currentDropZonePosition.y, wantedOperation, offeredData, Context.currentDroppableExtras, Options.Extras);\n        switch (true) {\n            case (acceptedType == null):\n                Context.DroppableWasDropped = true;\n                Context.currentDropOperation = wantedOperation;\n                Context.currentTypeTransferred = undefined;\n                Context.currentDataTransferred = undefined;\n                break;\n            case ValueIsOneOf(acceptedType, offeredTypeList):\n                Context.DroppableWasDropped = true;\n                Context.currentDropOperation = wantedOperation;\n                Context.currentTypeTransferred = acceptedType;\n                Context.currentDataTransferred = offeredData[acceptedType];\n                break;\n            default: // handler should return false in case of failure\n                Context.DroppableWasDropped = false;\n                Context.currentDropZoneExtras = undefined;\n                Context.currentDropZonePosition = undefined;\n                Context.currentDropOperation = undefined;\n                Context.currentTypeTransferred = undefined;\n                Context.currentDataTransferred = undefined;\n            //        invokeHandler('onDroppableLeave', Options, currentDroppableExtras, Options.Extras)\n        }\n        Context.currentDropZoneElement = undefined;\n    }\n    /**** updateDropZoneOptions ****/\n    function updateDropZoneOptions(Options) {\n        Options = parsedDropZoneOptions(Options);\n        if (Options.Extras != null) {\n            currentDropZoneOptions.Extras = Options.Extras;\n        }\n        if (ObjectIsNotEmpty(Options.TypesToAccept)) {\n            currentDropZoneOptions.TypesToAccept = Options.TypesToAccept;\n        }\n        if (Options.HoldDelay != null) {\n            currentDropZoneOptions.HoldDelay = Options.HoldDelay;\n        }\n    }\n    Element.setAttribute('draggable', 'true');\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragenter', enteredByDroppable);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragover', hoveredByDroppable);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragleave', leftByDroppable);\n    // @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drop', droppedByDroppable);\n    return { update: updateDropZoneOptions };\n}\n/**** ValueIsPosition ****/\nfunction ValueIsPosition(Candidate) {\n    return (ValueIsPlainObject(Candidate) &&\n        ValueIsFiniteNumber(Candidate.x) && ValueIsFiniteNumber(Candidate.y));\n}\n/**** asPosition ****/\nfunction asPosition(Value) {\n    return { x: Value.left, y: Value.top };\n}\n/**** PositionReferenceFor ****/\nfunction PositionReferenceFor(Element, Options) {\n    var PositionReference;\n    switch (true) {\n        case (Options.relativeTo === 'parent'):\n            PositionReference = Element.parentElement;\n            break;\n        case (Options.relativeTo === 'body'):\n            PositionReference = document.body;\n            break;\n        case (Options.relativeTo instanceof HTMLElement):\n        case (Options.relativeTo instanceof SVGElement):\n            //    case (Options.relativeTo instanceof MathMLElement):\n            PositionReference = Options.relativeTo;\n            if ((PositionReference != document.body) &&\n                !document.body.contains(PositionReference))\n                throwError('InvalidArgument: the HTML element given as \"relativeTo\" option ' +\n                    'is not part of this HTML document');\n            break;\n        default: // CSS selector\n            PositionReference = Element.closest(Options.relativeTo);\n    }\n    return (PositionReference == null ? document.body : PositionReference);\n}\n/**** DragImageFor ****/\nfunction DragImageFor(Element, Options) {\n    switch (true) {\n        case (Options.Dummy === 'standard'):\n            return undefined;\n        case (Options.Dummy === 'none'):\n            var invisibleDragImage = document.createElement('div');\n            invisibleDragImage.setAttribute('style', 'display:block; position:absolute; width:1px; height:1px; ' +\n                'background:transparent; border:none; margin:0px; padding:0px; ' +\n                'cursor:auto');\n            document.body.appendChild(invisibleDragImage);\n            return invisibleDragImage;\n        case ValueIsNonEmptyString(Options.Dummy): // may flicker shortly\n            var auxiliaryElement = document.createElement('div');\n            auxiliaryElement.style.display = 'block';\n            auxiliaryElement.style.position = 'absolute';\n            auxiliaryElement.style.left = (document.body.scrollWidth + 100) + 'px';\n            document.body.appendChild(auxiliaryElement);\n            auxiliaryElement.innerHTML = Options.Dummy;\n            return auxiliaryElement.children[0];\n        case (Options.Dummy instanceof HTMLElement):\n        case (Options.Dummy instanceof SVGElement):\n            //    case (Options.Dummy instanceof MathMLElement):\n            return Options.Dummy;\n        case ValueIsFunction(Options.Dummy):\n            var Candidate = undefined;\n            try {\n                Candidate = Options.Dummy(Options.Extras, Element);\n            }\n            catch (Signal) {\n                console.error('RuntimeError: creating draggable dummy failed', Signal);\n            }\n            if (Candidate != null) {\n                if ((Candidate instanceof HTMLElement) || (Candidate instanceof SVGElement)) {\n                    return Candidate;\n                }\n                else {\n                    console.error('InvalidArgument: the newly created draggable dummy is ' +\n                        'neither an HTML nor an SVG element');\n                }\n            }\n    }\n}\n/**** parsedOperations ****/\nfunction parsedOperations(Description, Argument, Default) {\n    if (Default === void 0) { Default = 'copy move link'; }\n    var Operations = allowedString(Description, Argument) || Default;\n    switch (Operations.trim()) {\n        case 'all': return 'copy move link';\n        case 'none': return '';\n    }\n    var OperationList = Operations.trim().replace(/\\s+/g, ' ').split(' ');\n    allowListSatisfying(Description, OperationList, function (Operation) { return ValueIsOneOf(Operation, DropOperations); });\n    return OperationList.reduce(function (Result, Operation) { return (Result.indexOf(Operation) < 0 ? Result + Operation + ' ' : Result); }, ' ');\n}\nfunction allowedEffectsFrom(Operations) {\n    var EffectIndex = ( // Horner's method\n    (Operations.indexOf('move') < 0 ? 0 : 1) * 2 +\n        (Operations.indexOf('link') < 0 ? 0 : 1)) * 2 +\n        (Operations.indexOf('copy') < 0 ? 0 : 1);\n    return [\n        'none', 'copy', 'link', 'copyLink', 'move', 'copyMove', 'linkMove', 'all'\n    ][EffectIndex];\n}\n/**** invokeHandler ****/\nfunction invokeHandler(Name, Options) {\n    var Arguments = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        Arguments[_i - 2] = arguments[_i];\n    }\n    if (Options[Name] != null) {\n        try {\n            return Options[Name].apply(null, Arguments);\n        }\n        catch (Signal) {\n            console.error(quoted(Name) + ' handler failed', Signal);\n        }\n    }\n}\nvar ResultOfHandler = invokeHandler;\n\nexport { DropOperations, asDraggable, asDropZone, asDroppable };\n//# sourceMappingURL=svelte-drag-and-drop-actions.esm.js.map\n","//----------------------------------------------------------------------------//\n//                             Svelte Device Info                             //\n//----------------------------------------------------------------------------//\nvar memoized = {};\n/**** DeviceIsMobile ****/\n// see https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\nfunction DeviceIsMobile() {\n    var Result = false;\n    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)))\n        Result = true; })(navigator.userAgent || navigator.vendor || window['opera']);\n    return Result;\n}\n/**** DeviceIsPhone ****/\n// see https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\nfunction DeviceIsPhone() {\n    if (DeviceIsMobile()) {\n        var ViewportWidth = window.innerWidth;\n        var ViewportHeight = window.innerHeight;\n        var smallerEdgeSize = Math.min(ViewportWidth, ViewportHeight);\n        var largerEdgeSize = Math.max(ViewportWidth, ViewportHeight);\n        return (smallerEdgeSize <= 480) && (largerEdgeSize <= 896);\n    }\n    else {\n        return false;\n    }\n}\n/**** DevicePointingAccuracy ****/\n// Internet Explorer and MS/Edge are NOT supported\nfunction MediaQuery(Query) {\n    var MediaMatcher = (window.matchMedia ||\n        // @ts-ignore\n        window['webkitMatchmedia'] || window['mozMatchmedia'] || window['oMatchmedia']);\n    return (MediaMatcher != null) && MediaMatcher(Query).matches;\n}\nfunction DocumentIsReady() {\n    return ((document.readyState === 'interactive') ||\n        (document.readyState === 'complete'));\n}\n/**** touch device without support for \"pointer:coarse\"? ****/\nfunction AppRunsOnLegacyTouchDevice() {\n    if (memoized.AppRunsOnLegacyTouchDevice == null) {\n        memoized.AppRunsOnLegacyTouchDevice = (!MediaQuery('(pointer:fine)') &&\n            !MediaQuery('(pointer:coarse)') && !MediaQuery('-moz-touch-enabled') &&\n            (('ontouchstart' in Window) || ((navigator.maxTouchPoints || 0) > 0) ||\n                (/touch|android|iphone|ipod|ipad/i).test(navigator.userAgent)));\n    }\n    return memoized.AppRunsOnLegacyTouchDevice;\n}\n/**** rewrite media query rules for legacy browsers on touch devices ****/\nfunction ListElement(List, Index) {\n    return (typeof List.item === 'function' ? List.item(Index) : List[Index]);\n}\nfunction ListHasElementMatching(List, Pattern) {\n    for (var i = 0, l = List.length; i < l; i++) {\n        if (Pattern.test(ListElement(List, i))) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction rewriteMediaQueriesOnLegacyTouchDevices() {\n    if (memoized.MediaQueriesHaveBeenRewritten) {\n        return;\n    }\n    if (AppRunsOnLegacyTouchDevice()) {\n        if (DocumentIsReady()) {\n            var Stylesheets = document.styleSheets; // reference, not copy\n            for (var i = 0, l = Stylesheets.length; i < l; i++) {\n                var Rules = Stylesheets[i]['cssRules'] || Stylesheets[i]['rules'];\n                for (var j = 0, k = Rules.length; j < k; j++) {\n                    var Rule = Rules[j];\n                    if (Rule.type === CSSRule.MEDIA_RULE) {\n                        if (ListHasElementMatching(Rule.media, /handheld/i)) {\n                            var Media = Rule.media; // reference, not copy\n                            Media.mediaText = Media.mediaText.replace('handheld', 'screen');\n                        }\n                    }\n                }\n            }\n            /**** rewrite media-dependent links for legacy browsers ****/\n            var Links = document.getElementsByTagName('link');\n            for (var i = 0, l = Links.length; i < l; i++) {\n                var Link = Links[i];\n                if ((/handheld/i).test(Link.media)) {\n                    Link.media = Link.media.replace('handheld', 'screen');\n                }\n            }\n            memoized.MediaQueriesHaveBeenRewritten = true;\n        }\n        else {\n            window.addEventListener('DOMContentLoaded', rewriteMediaQueriesOnLegacyTouchDevices);\n        }\n    }\n}\nfunction DevicePointingAccuracy() {\n    if (memoized.DevicePointingAccuracy == null) {\n        updateDevicePointingAccuracy();\n        if (!DocumentIsReady() && !memoized.waitingForLoaded) {\n            memoized.waitingForLoaded = true;\n            window.addEventListener('DOMContentLoaded', updateDevicePointingAccuracy);\n            // after document is loaded, classes will be applied as foreseen\n        }\n    }\n    return memoized.DevicePointingAccuracy; // may change while running!\n}\nfunction updateDevicePointingAccuracy() {\n    var updatedPointingAccuracy = 'fine';\n    switch (true) {\n        case MediaQuery('(pointer:none)'):\n            updatedPointingAccuracy = 'none';\n            break;\n        case MediaQuery('(pointer:coarse)'):\n        case MediaQuery('-moz-touch-enabled'):\n        case AppRunsOnLegacyTouchDevice():\n            updatedPointingAccuracy = 'coarse';\n            break;\n    }\n    memoized.DevicePointingAccuracy = updatedPointingAccuracy;\n    if (DocumentIsReady()) {\n        var ClassList = document.body.classList; // reference, not copy\n        if (((updatedPointingAccuracy === 'none') !== ClassList.contains('noPointer')) ||\n            ((updatedPointingAccuracy === 'fine') !== ClassList.contains('finePointer')) ||\n            ((updatedPointingAccuracy === 'coarse') !== ClassList.contains('coarsePointer'))) {\n            document.body.classList.remove('noPointer', 'finePointer', 'coarsePointer');\n            switch (updatedPointingAccuracy) {\n                case 'none':\n                    document.body.classList.add('noPointer');\n                    break;\n                case 'fine':\n                    document.body.classList.add('finePointer');\n                    break;\n                case 'coarse':\n                    document.body.classList.add('coarsePointer');\n                    break;\n            }\n        }\n    }\n}\n/**** registerHandler ****/\nfunction registerHandler(Handler, onceOnly) {\n    if (typeof Handler !== 'function') {\n        throw new Error('handler function expected');\n    }\n    if (memoized.EventHandlerRegistry == null) {\n        memoized.EventHandlerRegistry = [];\n    }\n    var EventHandlerRegistry = memoized.EventHandlerRegistry; // ref., not copy!\n    for (var i = 0, l = EventHandlerRegistry.length; i < l; i++) {\n        if (EventHandlerRegistry[i].Handler === Handler) {\n            EventHandlerRegistry[i].onceOnly = onceOnly;\n            return;\n        }\n    }\n    EventHandlerRegistry.push({ Handler: Handler, onceOnly: onceOnly });\n    if (EventHandlerRegistry.length === 1) {\n        observePointingAccuracy();\n    }\n}\n/**** unregisterHandler ****/\nfunction unregisterHandler(Handler) {\n    if (memoized.EventHandlerRegistry == null) {\n        memoized.EventHandlerRegistry = [];\n    }\n    var EventHandlerRegistry = memoized.EventHandlerRegistry; // ref., not copy!\n    for (var i = 0, l = EventHandlerRegistry.length; i < l; i++) {\n        if (EventHandlerRegistry[i].Handler === Handler) {\n            EventHandlerRegistry.splice(i, 1);\n            break;\n        }\n    }\n    if (EventHandlerRegistry.length === 0) {\n        unobservePointingAccuracy();\n    }\n}\n/**** onPointingAccuracyChanged ****/\nfunction onPointingAccuracyChanged(Handler) {\n    registerHandler(Handler, false);\n}\n/**** oncePointingAccuracyChanged ****/\nfunction oncePointingAccuracyChanged(Handler) {\n    registerHandler(Handler, true);\n}\n/**** offPointingAccuracyChanged ****/\nfunction offPointingAccuracyChanged(Handler) {\n    unregisterHandler(Handler);\n}\n/**** observePointingAccuracy (e.g., on \"convertibles\") ****/\nfunction observePointingAccuracy() {\n    memoized.AccuracyPoller = setInterval(function () {\n        var oldPointingAccuracy = DevicePointingAccuracy();\n        updateDevicePointingAccuracy();\n        if (DevicePointingAccuracy() !== oldPointingAccuracy) {\n            invokeRegisteredHandlers();\n        }\n    }, 500);\n}\n/**** unobservePointingAccuracy ****/\nfunction unobservePointingAccuracy() {\n    clearInterval(memoized.AccuracyPoller);\n    memoized.AccuracyPoller = undefined;\n}\n/**** invokeRegisteredHandlers ****/\nfunction invokeRegisteredHandlers() {\n    if (memoized.EventHandlerRegistry == null) {\n        memoized.EventHandlerRegistry = [];\n    }\n    var EventHandlerRegistry = memoized.EventHandlerRegistry; // ref., not copy!\n    for (var i = 0, l = EventHandlerRegistry.length; i < l; i++) {\n        var _a = EventHandlerRegistry[i], Handler = _a.Handler, onceOnly = _a.onceOnly;\n        try {\n            Handler(DevicePointingAccuracy());\n        }\n        catch (Signal) {\n            console.warn('PointingAccuracy observation function failed with', Signal);\n        }\n        if (onceOnly) {\n            unregisterHandler(Handler);\n        } // a bit inefficient, but DRY\n    }\n}\nvar svelteDeviceInfo = {\n    get isMobile() { return DeviceIsMobile(); },\n    get isPhone() { return DeviceIsPhone(); },\n    get isTablet() { return DeviceIsMobile() && !DeviceIsPhone(); },\n    get isLegacyTouchDevice() { return AppRunsOnLegacyTouchDevice(); },\n    rewriteMediaQueriesOnLegacyTouchDevices: rewriteMediaQueriesOnLegacyTouchDevices,\n    get PointingAccuracy() { return DevicePointingAccuracy(); },\n    onPointingAccuracyChanged: onPointingAccuracyChanged,\n    oncePointingAccuracyChanged: oncePointingAccuracyChanged,\n    offPointingAccuracyChanged: offPointingAccuracyChanged,\n    get observesPointingAccuracy() { return (memoized.AccuracyPoller != null); }\n};\n\nexport default svelteDeviceInfo;\n//# sourceMappingURL=svelte-device-info.esm.js.map\n","//----------------------------------------------------------------------------//\n//                        locally unique Id Generator                         //\n//----------------------------------------------------------------------------//\nvar IdCounter = 0; // hidden in the closure of \"nextId\"\nfunction nextId() {\n    return ++IdCounter;\n}\n/**** make global.nextId a real singleton ****/\nvar global = /*#__PURE__*/ Function('return this')();\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\nif (typeof global.nextId !== 'function') {\n    global.nextId = nextId;\n}\n/**** newUniqueId - the actually exported function ****/\nfunction newUniqueId() {\n    return 'uid-' + global.nextId();\n}\n\nexport default newUniqueId;\n//# sourceMappingURL=locally-unique-id-generator.esm.js.map\n","//----------------------------------------------------------------------------//\n//                        JavaScript Interface Library                        //\n//----------------------------------------------------------------------------//\n/**** get a reference to the \"global\" object ****/\nvar global = /*#__PURE__*/ Function('return this')();\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\n//------------------------------------------------------------------------------\n//--                             Object Functions                             --\n//------------------------------------------------------------------------------\n// allow methods from Object.prototype to be applied to \"vanilla\" objects\n/**** Object_hasOwnProperty ****/\nfunction Object_hasOwnProperty(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('hasOwnProperty' in Value) && (typeof Value.hasOwnProperty === 'function')\n        ? Value.hasOwnProperty(PropertyName)\n        : Object.prototype.hasOwnProperty.call(Value, PropertyName));\n}\n/**** Object_isPrototypeOf ****/\nfunction Object_isPrototypeOf(Value, Candidate) {\n    return ((Value == null) || // let this method crash like its original\n        ('isPrototypeOf' in Value) && (typeof Value.isPrototypeOf === 'function')\n        ? Value.isPrototypeOf(Candidate)\n        : Object.prototype.isPrototypeOf.call(Value, Candidate));\n}\n/**** Object_propertyIsEnumerable ****/\nfunction Object_propertyIsEnumerable(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('propertyIsEnumerable' in Value) && (typeof Value.propertyIsEnumerable === 'function')\n        ? Value.propertyIsEnumerable(PropertyName)\n        : Object.prototype.propertyIsEnumerable.call(Value, PropertyName));\n}\n/**** Object_toString ****/\nfunction Object_toString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toString' in Value) && (typeof Value.toString === 'function')\n        ? Value.toString()\n        : Object.prototype.toString.call(Value));\n}\n/**** Object_toLocaleString ****/\nfunction Object_toLocaleString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toLocaleString' in Value) && (typeof Value.toLocaleString === 'function')\n        ? Value.toLocaleString()\n        : Object.prototype.toString.call(Value)); // a missing \"toLocaleString\" method will crash Object.prototype.toLocaleString\n}\n/**** Object_valueOf ****/\nfunction Object_valueOf(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('valueOf' in Value) && (typeof Value.valueOf === 'function')\n        ? Value.valueOf()\n        : Object.prototype.valueOf.call(Value));\n}\n/**** ObjectMergedWith ****/\nfunction ObjectMergedWith(TargetObject) {\n    var otherObjectList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherObjectList[_i - 1] = arguments[_i];\n    }\n    for (var i = 0, l = otherObjectList.length; i < l; i++) {\n        var otherObject = otherObjectList[i];\n        if (otherObject == null) {\n            continue;\n        }\n        if (typeof otherObject === 'object') {\n            for (var Key in otherObject) {\n                var Descriptor = Object.getOwnPropertyDescriptor(otherObject, Key);\n                if (Descriptor != null) {\n                    Object.defineProperty(TargetObject, Key, Descriptor);\n                }\n            }\n        }\n        else {\n            throwError('InvalidArgument: argument #' + (i + 1) + ' is not an object');\n        }\n    }\n    return TargetObject;\n}\n/**** throwError - simplifies construction of named errors ****/\nfunction throwError(Message) {\n    var Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message);\n    if (Match == null) {\n        throw new Error(Message);\n    }\n    else {\n        var namedError = new Error(Match[2]);\n        namedError.name = Match[1];\n        throw namedError;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Value Classification Functions                      --\n//------------------------------------------------------------------------------\n/**** ValueExists ****/\nfunction ValueExists(Value) {\n    return (Value != null);\n}\n/**** ValueIsMissing ****/\nfunction ValueIsMissing(Value) {\n    return (Value == null);\n}\n/**** ValueIsBoolean ****/\nfunction ValueIsBoolean(Value) {\n    return (typeof Value === 'boolean') || (Value instanceof Boolean);\n}\n/**** ValueIsNumber ****/\nfunction ValueIsNumber(Value) {\n    return (typeof Value === 'number') || (Value instanceof Number);\n}\n/**** ValueIsFiniteNumber (pure \"isFinite\" breaks on objects) ****/\nfunction ValueIsFiniteNumber(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isFinite(Value.valueOf());\n}\n/**** ValueIsNaN (numeric, but NaN - this differs from pure \"isNaN\") ****/\nfunction ValueIsNaN(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isNaN(Value.valueOf());\n}\n/**** ValueIsNumberInRange ****/\nfunction ValueIsNumberInRange(Value, minValue, maxValue, withMin, withMax) {\n    if (withMin === void 0) { withMin = true; }\n    if (withMax === void 0) { withMax = true; }\n    if (!ValueIsNumber(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (!withMin && (Value === minValue)) ||\n                (Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n        else {\n            if ((Value < minValue) || (!withMin && (Value === minValue))) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsInteger ****/\nfunction ValueIsInteger(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value);\n}\n/**** ValueIsIntegerInRange ****/\nfunction ValueIsIntegerInRange(Value, minValue, maxValue) {\n    if (!ValueIsInteger(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (Value > maxValue)) {\n                return false;\n            }\n        }\n        else {\n            if (Value < minValue) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if (Value > maxValue) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsOrdinal ****/\nfunction ValueIsOrdinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 0);\n}\n/**** ValueIsCardinal ****/\nfunction ValueIsCardinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 1);\n}\n/**** ValueIsString ****/\nfunction ValueIsString(Value) {\n    return (typeof Value === 'string') || (Value instanceof String);\n}\n/**** ValueIs[Non]EmptyString ****/\nvar emptyStringPattern = /^\\s*$/;\nfunction ValueIsEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && emptyStringPattern.test(Value.valueOf());\n}\nfunction ValueIsNonEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && !emptyStringPattern.test(Value.valueOf());\n}\n/**** ValueIsStringMatching ****/\nfunction ValueIsStringMatching(Value, Pattern) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && Pattern.test(Value.valueOf());\n}\n/**** ValueIsText ****/\nvar noCtrlCharsButCRLFPattern = /^[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsText(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsButCRLFPattern);\n}\n/**** ValueIsTextline ****/\nvar noCtrlCharsPattern = /^[^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsTextline(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsPattern);\n}\n/**** ValueIsFunction ****/\nfunction ValueIsFunction(Value) {\n    return (typeof Value === 'function');\n}\n/**** ValueIsAnonymousFunction ****/\nfunction ValueIsAnonymousFunction(Value) {\n    return ((typeof Value === 'function') &&\n        ((Value.name == null) || (Value.name === '')));\n}\n/**** ValueIsNamedFunction ****/\nfunction ValueIsNamedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        (Value.name != null) && (Value.name !== ''));\n}\n/**** ValueIsNativeFunction ****/\nfunction ValueIsNativeFunction(Value) {\n    return ((typeof Value === 'function') &&\n        /^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsScriptedFunction ****/\nfunction ValueIsScriptedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        !/^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsObject ****/\nfunction ValueIsObject(Value) {\n    return (Value != null) && (typeof Value === 'object');\n}\n/**** ValueIsPlainObject ****/\nfunction ValueIsPlainObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        (Object.getPrototypeOf(Value) === Object.prototype));\n}\n/**** ValueIsVanillaObject ****/\nfunction ValueIsVanillaObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        !(Value instanceof Object));\n}\n/**** ValueIsArray ****/\nvar ValueIsArray = Array.isArray;\n/**** ValueIsList (\"dense\" array) ****/\nfunction ValueIsList(Value, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        for (var i = 0, l = Value.length; i < l; i++) {\n            if (Value[i] === undefined) {\n                return false;\n            }\n        }\n        if (minLength != null) {\n            if (Value.length < minLength) {\n                return false;\n            }\n        }\n        if (maxLength != null) {\n            if (Value.length > maxLength) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/**** ValueIsListSatisfying ****/\nfunction ValueIsListSatisfying(Value, Validator, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        try {\n            for (var i = 0, l = Value.length; i < l; i++) {\n                if (Validator(Value[i]) == false) {\n                    return false;\n                }\n            }\n            if (minLength != null) {\n                if (Value.length < minLength) {\n                    return false;\n                }\n            }\n            if (maxLength != null) {\n                if (Value.length > maxLength) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        catch (Signal) { /* nop */ }\n    }\n    return false;\n}\n/**** ValueIsInstanceOf ****/\nfunction ValueIsInstanceOf(Value, Constructor) {\n    return (Value instanceof Constructor);\n}\n/**** ValueInheritsFrom ****/\nfunction ValueInheritsFrom(Value, Prototype) {\n    return Object_isPrototypeOf(Prototype, Value);\n}\n/**** ValueIsDate ****/\nfunction ValueIsDate(Value) {\n    return (Value instanceof Date);\n}\n/**** ValueIsError ****/\nfunction ValueIsError(Value) {\n    return (Value instanceof Error);\n}\n/**** ValueIsPromise ****/\nfunction ValueIsPromise(Value) {\n    return (Value != null) && (typeof Value.then === 'function');\n}\n// see https://stackoverflow.com/questions/27746304/how-do-i-tell-if-an-object-is-a-promise\n/**** ValueIsRegExp ****/\nfunction ValueIsRegExp(Value) {\n    return (Value instanceof RegExp);\n}\n/**** ValueIsOneOf ****/\nfunction ValueIsOneOf(Value, ValueList) {\n    return (ValueList.indexOf(Value) >= 0);\n} // no automatic unboxing of boxed values and vice-versa!\n/**** ValueIsColor ****/\nfunction ValueIsColor(Value) {\n    return ValueIsString(Value) && (ColorSet.hasOwnProperty(Value) ||\n        /^#[a-fA-F0-9]{6}$/.test(Value) ||\n        /^#[a-fA-F0-9]{8}$/.test(Value) ||\n        /^rgb\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+\\)$/.test(Value) || // not perfect\n        /^rgba\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+,([01]|[0]?[.][0-9]+)\\)$/.test(Value) // dto.\n    );\n}\n/**** ValueIsEMailAddress ****/\nvar EMailAddressPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n// see https://stackoverflow.com/questions/201323/how-to-validate-an-email-address-using-a-regular-expression\nfunction ValueIsEMailAddress(Value) {\n    return ValueIsStringMatching(Value, EMailAddressPattern);\n}\n/**** ValueIsURL ****/\nvar noCtrlCharsOrWhitespacePattern = /^[^\\s\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsURL(Value) {\n    if (!ValueIsStringMatching(Value, noCtrlCharsOrWhitespacePattern) ||\n        (Value === '')) {\n        return false;\n    }\n    try {\n        new URL(Value, 'file://');\n        return true;\n    }\n    catch (Signal) {\n        return false;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Argument Validation Functions                       --\n//------------------------------------------------------------------------------\nvar rejectNil = false;\nvar acceptNil = true;\n/**** validatedArgument ****/\nfunction validatedArgument(Description, Argument, ValueIsValid, NilIsAcceptable, Expectation) {\n    if (Argument == null) {\n        if (NilIsAcceptable) {\n            return Argument;\n        }\n        else {\n            throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n        }\n    }\n    else {\n        if (ValueIsValid(Argument)) {\n            switch (true) {\n                case Argument instanceof Boolean:\n                case Argument instanceof Number:\n                case Argument instanceof String:\n                    return Argument.valueOf(); // unboxes any primitives\n                default:\n                    return Argument;\n            }\n        }\n        else {\n            throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no valid \" + escaped(Expectation));\n        }\n    }\n}\n/**** ValidatorForClassifier ****/\nfunction ValidatorForClassifier(Classifier, NilIsAcceptable, Expectation) {\n    var Validator = function (Description, Argument) {\n        return validatedArgument(Description, Argument, Classifier, NilIsAcceptable, Expectation);\n    };\n    var ClassifierName = Classifier.name;\n    if ((ClassifierName != null) && /^ValueIs/.test(ClassifierName)) {\n        var ValidatorName = ClassifierName.replace(// derive name from validator\n        /^ValueIs/, NilIsAcceptable ? 'allow' : 'expect');\n        return FunctionWithName(Validator, ValidatorName);\n    }\n    else {\n        return Validator; // without any specific name\n    }\n}\n/**** FunctionWithName (works with older JS engines as well) ****/\nfunction FunctionWithName(originalFunction, desiredName) {\n    if (originalFunction == null) {\n        throwError('MissingArgument: no function given');\n    }\n    if (typeof originalFunction !== 'function') {\n        throwError('InvalidArgument: the given 1st Argument is not a JavaScript function');\n    }\n    if (desiredName == null) {\n        throwError('MissingArgument: no desired name given');\n    }\n    if ((typeof desiredName !== 'string') && !(desiredName instanceof String)) {\n        throwError('InvalidArgument: the given desired name is not a string');\n    }\n    if (originalFunction.name === desiredName) {\n        return originalFunction;\n    }\n    try {\n        Object.defineProperty(originalFunction, 'name', { value: desiredName });\n        if (originalFunction.name === desiredName) {\n            return originalFunction;\n        }\n    }\n    catch (signal) { /* ok - let's take the hard way */ }\n    var renamed = new Function('originalFunction', 'return function ' + desiredName + ' () {' +\n        'return originalFunction.apply(this,Array.prototype.slice.apply(arguments))' +\n        '}');\n    return renamed(originalFunction);\n} // also works with older JavaScript engines\n/**** expect[ed]Value ****/\nfunction expectValue(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    else {\n        return Argument.valueOf();\n    }\n}\nvar expectedValue = expectValue;\n/**** allow/expect[ed]Boolean ****/\nvar allowBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, acceptNil, 'boolean value'), allowedBoolean = allowBoolean;\nvar expectBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, rejectNil, 'boolean value'), expectedBoolean = expectBoolean;\n/**** allow/expect[ed]Number ****/\nvar allowNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, acceptNil, 'numeric value'), allowedNumber = allowNumber;\nvar expectNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, rejectNil, 'numeric value'), expectedNumber = expectNumber;\n/**** allow/expect[ed]FiniteNumber ****/\nvar allowFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, acceptNil, 'finite numeric value'), allowedFiniteNumber = allowFiniteNumber;\nvar expectFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, rejectNil, 'finite numeric value'), expectedFiniteNumber = expectFiniteNumber;\n/**** allow/expect[ed]NaN ****/\nvar allowNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, acceptNil, 'NaN value'), allowedNaN = allowNaN;\nvar expectNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, rejectNil, 'NaN value'), expectedNaN = expectNaN;\n/**** allow[ed]NumberInRange ****/\nfunction allowNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    return (Argument == null\n        ? Argument\n        : expectedNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax));\n}\nvar allowedNumberInRange = allowNumberInRange;\n/**** expect[ed]NumberInRange ****/\nfunction expectNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    expectNumber(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not-a-number\");\n    }\n    if (withMin == null) {\n        withMin = true;\n    }\n    if (withMax == null) {\n        withMax = true;\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue)) ||\n                (Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" (\" + Argument + \") is outside \" +\n                    (\"the allowed range (\" + minValue + \"...\" + maxValue + \")\"));\n            }\n        }\n        else {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" is below the allowed \" +\n                    (\"minimum (\" + Argument + \" \" + (withMin ? '<' : '<=') + \" \" + minValue + \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" exceeds the allowed \" +\n                    (\"maximum (\" + Argument + \" \" + (withMax ? '>' : '>=') + \" \" + maxValue + \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedNumberInRange = expectNumberInRange;\n/**** allow/expect[ed]Integer ****/\nvar allowInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, acceptNil, 'integral numeric value'), allowedInteger = allowInteger;\nvar expectInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, rejectNil, 'integral numeric value'), expectedInteger = expectInteger;\n/**** allow[ed]IntegerInRange ****/\nfunction allowIntegerInRange(Description, Argument, minValue, maxValue) {\n    return (Argument == null\n        ? Argument\n        : expectedIntegerInRange(Description, Argument, minValue, maxValue));\n}\nvar allowedIntegerInRange = allowIntegerInRange;\n/**** expect[ed]IntegerInRange ****/\nfunction expectIntegerInRange(Description, Argument, minValue, maxValue) {\n    expectInteger(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not-a-number\");\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (Argument > maxValue)) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" (\" + Argument + \") is outside \" +\n                    (\"the allowed range (\" + minValue + \"...\" + maxValue + \")\"));\n            }\n        }\n        else {\n            if (Argument < minValue) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" is below the allowed \" +\n                    (\"minimum (\" + Argument + \" < \" + minValue + \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if (Argument > maxValue) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" exceeds the allowed \" +\n                    (\"maximum (\" + Argument + \" > \" + maxValue + \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedIntegerInRange = expectIntegerInRange;\n/**** allow/expect[ed]Ordinal ****/\nvar allowOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, acceptNil, 'ordinal number'), allowedOrdinal = allowOrdinal;\nvar expectOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, rejectNil, 'ordinal number'), expectedOrdinal = expectOrdinal;\n/**** allow/expect[ed]Cardinal ****/\nvar allowCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, acceptNil, 'cardinal number'), allowedCardinal = allowCardinal;\nvar expectCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, rejectNil, 'cardinal number'), expectedCardinal = expectCardinal;\n/**** allow/expect[ed]String ****/\nvar allowString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, acceptNil, 'literal string'), allowedString = allowString;\nvar expectString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, rejectNil, 'literal string'), expectedString = expectString;\n/**** allow/expect[ed]NonEmptyString ****/\nvar allowNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, acceptNil, 'non-empty literal string'), allowedNonEmptyString = allowNonEmptyString;\nvar expectNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, rejectNil, 'non-empty literal string'), expectedNonEmptyString = expectNonEmptyString;\n/**** allow[ed]StringMatching ****/\nfunction allowStringMatching(Description, Argument, Pattern) {\n    return (Argument == null\n        ? Argument\n        : expectedStringMatching(Description, Argument, Pattern));\n}\nvar allowedStringMatching = allowStringMatching;\n/**** expect[ed]StringMatching ****/\nfunction expectStringMatching(Description, Argument, Pattern) {\n    expectString(Description, Argument);\n    if (Pattern.test(Argument)) {\n        return Argument.valueOf();\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" does not match the specified pattern\");\n    }\n}\nvar expectedStringMatching = expectStringMatching;\n/**** allow/expect[ed]Text ****/\nvar allowText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, acceptNil, 'literal text'), allowedText = allowText;\nvar expectText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, rejectNil, 'literal text'), expectedText = expectText;\n/**** allow/expect[ed]Textline ****/\nvar allowTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, acceptNil, 'single line of text'), allowedTextline = allowTextline;\nvar expectTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, rejectNil, 'single line of text'), expectedTextline = expectTextline;\n/**** allow/expect[ed]Function ****/\nvar allowFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, acceptNil, 'JavaScript function'), allowedFunction = allowFunction;\nvar expectFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, rejectNil, 'JavaScript function'), expectedFunction = expectFunction;\n/**** allow/expect[ed]AnonymousFunction ****/\nvar allowAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, acceptNil, 'anonymous JavaScript function'), allowedAnonymousFunction = allowAnonymousFunction;\nvar expectAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, rejectNil, 'anonymous JavaScript function'), expectedAnonymousFunction = expectAnonymousFunction;\n/**** allow/expect[ed]NamedFunction ****/\nvar allowNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, acceptNil, 'named JavaScript function'), allowedNamedFunction = allowNamedFunction;\nvar expectNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, rejectNil, 'named JavaScript function'), expectedNamedFunction = expectNamedFunction;\n/**** allow/expect[ed]NativeFunction ****/\nvar allowNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, acceptNil, 'native JavaScript function'), allowedNativeFunction = allowNativeFunction;\nvar expectNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, rejectNil, 'native JavaScript function'), expectedNativeFunction = expectNativeFunction;\n/**** allow/expect[ed]ScriptedFunction ****/\nvar allowScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, acceptNil, 'scripted JavaScript function'), allowedScriptedFunction = allowScriptedFunction;\nvar expectScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, rejectNil, 'scripted JavaScript function'), expectedScriptedFunction = expectScriptedFunction;\n/**** allow/expect[ed]Object ****/\nvar allowObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, acceptNil, 'JavaScript object'), allowedObject = allowObject;\nvar expectObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, rejectNil, 'JavaScript object'), expectedObject = expectObject;\n/**** allow/expect[ed]PlainObject ****/\nvar allowPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, acceptNil, '\"plain\" JavaScript object'), allowedPlainObject = allowPlainObject;\nvar expectPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, rejectNil, '\"plain\" JavaScript object'), expectedPlainObject = expectPlainObject;\n/**** allow/expect[ed]VanillaObject ****/\nvar allowVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, acceptNil, '\"vanilla\" JavaScript object'), allowedVanillaObject = allowVanillaObject;\nvar expectVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, rejectNil, '\"vanilla\" JavaScript object'), expectedVanillaObject = expectVanillaObject;\n/**** allow[ed]Array ****/\nfunction allowArray(Description, Argument) {\n    return (Argument == null\n        ? Argument\n        : expectedArray(Description, Argument));\n}\nvar allowedArray = allowArray;\n/**** expect[ed]Array ****/\nfunction expectArray(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsArray(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no JavaScript array\");\n    }\n}\nvar expectedArray = expectArray;\n/**** allow[ed]List ****/\nfunction allowList(Description, Argument, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedList(Description, Argument, Expectation, minLength, maxLength));\n}\nvar allowedList = allowList;\n/**** expect[ed]List ****/\nfunction expectList(Description, Argument, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsList(Argument, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is \" + (Expectation == null\n            ? 'either not a list or contains an invalid number of elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedList = expectList;\n/**** allow[ed]ListSatisfying ****/\nfunction allowListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength));\n}\nvar allowedListSatisfying = allowListSatisfying;\n/**** expect[ed]ListSatisfying ****/\nfunction expectListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsListSatisfying(Argument, Validator, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is \" + (Expectation == null\n            ? 'either not a list or contains invalid elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedListSatisfying = expectListSatisfying;\n/**** allow[ed]InstanceOf ****/\nfunction allowInstanceOf(Description, Argument, constructor, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedInstanceOf(Description, Argument, constructor, Expectation));\n}\nvar allowedInstanceOf = allowInstanceOf;\n/**** expect[ed]InstanceOf ****/\nfunction expectInstanceOf(Description, Argument, constructor, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (!(Argument instanceof constructor)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no \" + escaped(Expectation));\n    }\n    return Argument;\n}\nvar expectedInstanceOf = expectInstanceOf;\n/**** allow[ed]ValueInheritingFrom ****/\nfunction allowValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedValueInheritingFrom(Description, Argument, prototype, Expectation));\n}\nvar allowedValueInheritingFrom = allowValueInheritingFrom;\n/**** expect[ed]ValueInheritingFrom ****/\nfunction expectValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (prototype.isPrototypeOf(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no \" + escaped(Expectation));\n    }\n}\nvar expectedValueInheritingFrom = expectValueInheritingFrom;\n/**** allow/expect[ed]Date ****/\nvar allowDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, acceptNil, 'JavaScript Date object'), allowedDate = allowDate;\nvar expectDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, rejectNil, 'JavaScript Date object'), expectedDate = expectDate;\n/**** allow/expect[ed]Error ****/\nvar allowError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, acceptNil, 'JavaScript Error object'), allowedError = allowError;\nvar expectError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, rejectNil, 'JavaScript Error object'), expectedError = expectError;\n/**** allow/expect[ed]Promise ****/\nvar allowPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, acceptNil, 'JavaScript Promise (or \"Thenable\") object'), allowedPromise = allowPromise;\nvar expectPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, rejectNil, 'JavaScript Promise (or \"Thenable\") object'), expectedPromise = expectPromise;\n/**** allow/expect[ed]RegExp ****/\nvar allowRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, acceptNil, 'JavaScript RegExp object'), allowedRegExp = allowRegExp;\nvar expectRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, rejectNil, 'JavaScript RegExp object'), expectedRegExp = expectRegExp;\n/**** allow[ed]OneOf ****/\nfunction allowOneOf(Description, Argument, ValueList) {\n    return (Argument == null\n        ? Argument\n        : expectedOneOf(Description, Argument, ValueList));\n}\nvar allowedOneOf = allowOneOf;\n/**** expect[ed]OneOf ****/\nfunction expectOneOf(Description, Argument, ValueList) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsOneOf(Argument, ValueList)) {\n        return ( // unboxes any primitives\n        (Argument == null) || (typeof Argument.valueOf !== 'function')\n            ? Argument\n            : Argument.valueOf());\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not among the supported values\");\n    }\n}\nvar expectedOneOf = expectOneOf;\n/**** allow/expect[ed]Color ****/\nvar allowColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, acceptNil, 'valid CSS color specification'), allowedColor = allowColor;\nvar expectColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, rejectNil, 'valid CSS color specification'), expectedColor = expectColor;\n/**** allow/expect[ed]EMailAddress ****/\nvar allowEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, acceptNil, 'valid EMail address'), allowedEMailAddress = allowEMailAddress;\nvar expectEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, rejectNil, 'valid EMail address'), expectedEMailAddress = expectEMailAddress;\n/**** allow/expect[ed]URL ****/\nvar allowURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, acceptNil, 'valid URL'), allowedURL = allowURL;\nvar expectURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, rejectNil, 'valid URL'), expectedURL = expectURL;\n/**** escaped - escapes all control characters in a given string ****/\nfunction escaped(Text) {\n    var EscapeSequencePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        return (Match === '\\\\' ? '\\\\\\\\' : Match);\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** unescaped - evaluates all escape sequences in a given string ****/\nfunction unescaped(Text) {\n    var EscapeSequencePattern = /\\\\[0bfnrtv'\"\\\\\\/]|\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        switch (Match) {\n            case '\\\\0': return '\\0';\n            case '\\\\b': return '\\b';\n            case '\\\\f': return '\\f';\n            case '\\\\n': return '\\n';\n            case '\\\\r': return '\\r';\n            case '\\\\t': return '\\t';\n            case '\\\\v': return '\\v';\n            case '\\\\\\'': return \"'\";\n            case '\\\\\"': return '\"';\n            case '\\\\\\\\': return \"\\\\\";\n            default: {\n                var CharCode = parseInt(Match.slice(2), 16);\n                return String.fromCharCode(CharCode);\n            }\n        }\n    });\n}\n/**** quotable - makes a given string ready to be put in single/double quotes ****/\nfunction quotable(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    var EscSeqOrSglQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|'/g;\n    var EscSeqOrDblQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|\"/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(Quote === \"'\" ? EscSeqOrSglQuotePattern : EscSeqOrDblQuotePattern, function (Match) {\n        switch (Match) {\n            case \"'\": return \"\\\\'\";\n            case '\"': return '\\\\\"';\n            case '\\\\': return '\\\\\\\\';\n            default: return Match;\n        }\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** quoted ****/\nfunction quoted(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    return Quote + quotable(Text, Quote) + Quote;\n}\n/**** HTMLsafe ****/\nfunction HTMLsafe(Argument, EOLReplacement) {\n    EOLReplacement = (EOLReplacement || '').trim() || '<br/>';\n    return Argument.replace(/[&<>\"'\\u0000-\\u001F\\u007F-\\u009F\\\\]/g, function (Match) {\n        switch (Match) {\n            case '&': return '&amp;';\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case \"'\": return '&apos;';\n            case '\\b': return '&#92;b';\n            case '\\f': return '&#92;f';\n            case '\\n': return EOLReplacement;\n            case '\\r': return '&#92;r';\n            case '\\t': return '&#92;t';\n            case '\\v': return '&#92;v';\n            case '\\\\': return '&#92;';\n            default:\n                var Result = Match.charCodeAt(0).toString(16);\n                return '&#x0000'.substring(3, 7 - Result.length) + Result + ';';\n        }\n    });\n}\n/**** MarkDownSafe ****/\nfunction MarkDownSafe(Argument, EOLReplacement) {\n    return HTMLsafe(Argument, EOLReplacement).replace(/:/g, '&#58;');\n}\n/**** ValuesDiffer ****/\nfunction ValuesDiffer(thisValue, otherValue) {\n    if (thisValue === otherValue) {\n        return false;\n    }\n    var thisType = typeof thisValue;\n    if (thisType !== typeof otherValue) {\n        return true;\n    }\n    /**** ArraysDiffer ****/\n    function ArraysDiffer(thisArray, otherArray) {\n        if (!Array.isArray(otherArray)) {\n            return true;\n        }\n        if (thisArray.length !== otherArray.length) {\n            return true;\n        }\n        for (var i = 0, l = thisArray.length; i < l; i++) {\n            if (ValuesDiffer(thisArray[i], otherArray[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**** ObjectsDiffer ****/\n    function ObjectsDiffer(thisObject, otherObject) {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n            return true;\n        }\n        for (var key in thisObject) {\n            if (!(key in otherObject)) {\n                return true;\n            }\n        }\n        for (var key in otherObject) {\n            if (!(key in thisObject)) {\n                return true;\n            }\n            if (ValuesDiffer(thisObject[key], otherObject[key])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    switch (thisType) {\n        case 'undefined':\n        case 'boolean':\n        case 'string':\n        case 'function': return true; // most primitives are compared using \"===\"\n        case 'number': return ((isNaN(thisValue) !== isNaN(otherValue)) ||\n            (Math.abs(thisValue - otherValue) > Number.EPSILON));\n        case 'object':\n            if (thisValue == null) {\n                return true;\n            } // since \"other_value\" != null!\n            if (otherValue == null) {\n                return true;\n            } // since \"this_value\" != null!\n            if (Array.isArray(thisValue)) {\n                return ArraysDiffer(thisValue, otherValue);\n            }\n            return ObjectsDiffer(thisValue, otherValue);\n        default: return true; // unsupported property type\n    }\n    return true;\n}\n/**** ValuesAreEqual ****/\nfunction ValuesAreEqual(thisValue, otherValue) {\n    return !ValuesDiffer(thisValue, otherValue);\n}\n/**** ObjectIsEmpty ****/\nfunction ObjectIsEmpty(Candidate) {\n    expectObject('candidate', Candidate);\n    for (var Key in Candidate) {\n        if (Object_hasOwnProperty(Candidate, Key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**** ObjectIsNotEmpty ****/\nfunction ObjectIsNotEmpty(Candidate) {\n    return !ObjectIsEmpty(Candidate);\n}\n/**** StringIsEmpty ****/\nfunction StringIsEmpty(Candidate) {\n    return /^\\s*$/.test(Candidate);\n}\n/**** StringIsNotEmpty ****/\nfunction StringIsNotEmpty(Candidate) {\n    return !StringIsEmpty(Candidate);\n}\n/**** constrained ****/\nfunction constrained(Value, Minimum, Maximum) {\n    if (Minimum === void 0) { Minimum = -Infinity; }\n    if (Maximum === void 0) { Maximum = Infinity; }\n    return Math.max(Minimum, Math.min(Value, Maximum));\n}\n//------------------------------------------------------------------------------\n//--                             Color Utilities                              --\n//------------------------------------------------------------------------------\n// built-in color names (see http://www.w3.org/TR/SVG/types.html#ColorKeywords) ----\nvar ColorSet = {\n    transparent: 'rgba(0,0,0,0,0.0)',\n    aliceblue: 'rgba(240,248,255,1.0)', lightpink: 'rgba(255,182,193,1.0)',\n    antiquewhite: 'rgba(250,235,215,1.0)', lightsalmon: 'rgba(255,160,122,1.0)',\n    aqua: 'rgba(0,255,255,1.0)', lightseagreen: 'rgba(32,178,170,1.0)',\n    aquamarine: 'rgba(127,255,212,1.0)', lightskyblue: 'rgba(135,206,250,1.0)',\n    azure: 'rgba(240,255,255,1.0)', lightslategray: 'rgba(119,136,153,1.0)',\n    beige: 'rgba(245,245,220,1.0)', lightslategrey: 'rgba(119,136,153,1.0)',\n    bisque: 'rgba(255,228,196,1.0)', lightsteelblue: 'rgba(176,196,222,1.0)',\n    black: 'rgba(0,0,0,1.0)', lightyellow: 'rgba(255,255,224,1.0)',\n    blanchedalmond: 'rgba(255,235,205,1.0)', lime: 'rgba(0,255,0,1.0)',\n    blue: 'rgba(0,0,255,1.0)', limegreen: 'rgba(50,205,50,1.0)',\n    blueviolet: 'rgba(138,43,226,1.0)', linen: 'rgba(250,240,230,1.0)',\n    brown: 'rgba(165,42,42,1.0)', magenta: 'rgba(255,0,255,1.0)',\n    burlywood: 'rgba(222,184,135,1.0)', maroon: 'rgba(128,0,0,1.0)',\n    cadetblue: 'rgba(95,158,160,1.0)', mediumaquamarine: 'rgba(102,205,170,1.0)',\n    chartreuse: 'rgba(127,255,0,1.0)', mediumblue: 'rgba(0,0,205,1.0)',\n    chocolate: 'rgba(210,105,30,1.0)', mediumorchid: 'rgba(186,85,211,1.0)',\n    coral: 'rgba(255,127,80,1.0)', mediumpurple: 'rgba(147,112,219,1.0)',\n    cornflowerblue: 'rgba(100,149,237,1.0)', mediumseagreen: 'rgba(60,179,113,1.0)',\n    cornsilk: 'rgba(255,248,220,1.0)', mediumslateblue: 'rgba(123,104,238,1.0)',\n    crimson: 'rgba(220,20,60,1.0)', mediumspringgreen: 'rgba(0,250,154,1.0)',\n    cyan: 'rgba(0,255,255,1.0)', mediumturquoise: 'rgba(72,209,204,1.0)',\n    darkblue: 'rgba(0,0,139,1.0)', mediumvioletred: 'rgba(199,21,133,1.0)',\n    darkcyan: 'rgba(0,139,139,1.0)', midnightblue: 'rgba(25,25,112,1.0)',\n    darkgoldenrod: 'rgba(184,134,11,1.0)', mintcream: 'rgba(245,255,250,1.0)',\n    darkgray: 'rgba(169,169,169,1.0)', mistyrose: 'rgba(255,228,225,1.0)',\n    darkgreen: 'rgba(0,100,0,1.0)', moccasin: 'rgba(255,228,181,1.0)',\n    darkgrey: 'rgba(169,169,169,1.0)', navajowhite: 'rgba(255,222,173,1.0)',\n    darkkhaki: 'rgba(189,183,107,1.0)', navy: 'rgba(0,0,128,1.0)',\n    darkmagenta: 'rgba(139,0,139,1.0)', oldlace: 'rgba(253,245,230,1.0)',\n    darkolivegreen: 'rgba(85,107,47,1.0)', olive: 'rgba(128,128,0,1.0)',\n    darkorange: 'rgba(255,140,0,1.0)', olivedrab: 'rgba(107,142,35,1.0)',\n    darkorchid: 'rgba(153,50,204,1.0)', orange: 'rgba(255,165,0,1.0)',\n    darkred: 'rgba(139,0,0,1.0)', orangered: 'rgba(255,69,0,1.0)',\n    darksalmon: 'rgba(233,150,122,1.0)', orchid: 'rgba(218,112,214,1.0)',\n    darkseagreen: 'rgba(143,188,143,1.0)', palegoldenrod: 'rgba(238,232,170,1.0)',\n    darkslateblue: 'rgba(72,61,139,1.0)', palegreen: 'rgba(152,251,152,1.0)',\n    darkslategray: 'rgba(47,79,79,1.0)', paleturquoise: 'rgba(175,238,238,1.0)',\n    darkslategrey: 'rgba(47,79,79,1.0)', palevioletred: 'rgba(219,112,147,1.0)',\n    darkturquoise: 'rgba(0,206,209,1.0)', papayawhip: 'rgba(255,239,213,1.0)',\n    darkviolet: 'rgba(148,0,211,1.0)', peachpuff: 'rgba(255,218,185,1.0)',\n    deeppink: 'rgba(255,20,147,1.0)', peru: 'rgba(205,133,63,1.0)',\n    deepskyblue: 'rgba(0,191,255,1.0)', pink: 'rgba(255,192,203,1.0)',\n    dimgray: 'rgba(105,105,105,1.0)', plum: 'rgba(221,160,221,1.0)',\n    dimgrey: 'rgba(105,105,105,1.0)', powderblue: 'rgba(176,224,230,1.0)',\n    dodgerblue: 'rgba(30,144,255,1.0)', purple: 'rgba(128,0,128,1.0)',\n    firebrick: 'rgba(178,34,34,1.0)', red: 'rgba(255,0,0,1.0)',\n    floralwhite: 'rgba(255,250,240,1.0)', rosybrown: 'rgba(188,143,143,1.0)',\n    forestgreen: 'rgba(34,139,34,1.0)', royalblue: 'rgba(65,105,225,1.0)',\n    fuchsia: 'rgba(255,0,255,1.0)', saddlebrown: 'rgba(139,69,19,1.0)',\n    gainsboro: 'rgba(220,220,220,1.0)', salmon: 'rgba(250,128,114,1.0)',\n    ghostwhite: 'rgba(248,248,255,1.0)', sandybrown: 'rgba(244,164,96,1.0)',\n    gold: 'rgba(255,215,0,1.0)', seagreen: 'rgba(46,139,87,1.0)',\n    goldenrod: 'rgba(218,165,32,1.0)', seashell: 'rgba(255,245,238,1.0)',\n    gray: 'rgba(128,128,128,1.0)', sienna: 'rgba(160,82,45,1.0)',\n    green: 'rgba(0,128,0,1.0)', silver: 'rgba(192,192,192,1.0)',\n    greenyellow: 'rgba(173,255,47,1.0)', skyblue: 'rgba(135,206,235,1.0)',\n    grey: 'rgba(128,128,128,1.0)', slateblue: 'rgba(106,90,205,1.0)',\n    honeydew: 'rgba(240,255,240,1.0)', slategray: 'rgba(112,128,144,1.0)',\n    hotpink: 'rgba(255,105,180,1.0)', slategrey: 'rgba(112,128,144,1.0)',\n    indianred: 'rgba(205,92,92,1.0)', snow: 'rgba(255,250,250,1.0)',\n    indigo: 'rgba(75,0,130,1.0)', springgreen: 'rgba(0,255,127,1.0)',\n    ivory: 'rgba(255,255,240,1.0)', steelblue: 'rgba(70,130,180,1.0)',\n    khaki: 'rgba(240,230,140,1.0)', tan: 'rgba(210,180,140,1.0)',\n    lavender: 'rgba(230,230,250,1.0)', teal: 'rgba(0,128,128,1.0)',\n    lavenderblush: 'rgba(255,240,245,1.0)', thistle: 'rgba(216,191,216,1.0)',\n    lawngreen: 'rgba(124,252,0,1.0)', tomato: 'rgba(255,99,71,1.0)',\n    lemonchiffon: 'rgba(255,250,205,1.0)', turquoise: 'rgba(64,224,208,1.0)',\n    lightblue: 'rgba(173,216,230,1.0)', violet: 'rgba(238,130,238,1.0)',\n    lightcoral: 'rgba(240,128,128,1.0)', wheat: 'rgba(245,222,179,1.0)',\n    lightcyan: 'rgba(224,255,255,1.0)', white: 'rgba(255,255,255,1.0)',\n    lightgoldenrodyellow: 'rgba(250,250,210,1.0)', whitesmoke: 'rgba(245,245,245,1.0)',\n    lightgray: 'rgba(211,211,211,1.0)', yellow: 'rgba(255,255,0,1.0)',\n    lightgreen: 'rgba(144,238,144,1.0)', yellowgreen: 'rgba(154,205,50,1.0)',\n    lightgrey: 'rgba(211,211,211,1.0)',\n};\n/**** HexColor - converts a given color to #rrggbbaa ****/\nfunction HexColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        Color = ColorSet[lowerColor];\n    } // do not return here as color is now in RGBA format\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return Color + 'FF';\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return Color;\n    }\n    var HexDigit = '0123456789ABCDEF';\n    function dec2hex(Value) {\n        if (Value > 255) {\n            Value = 255;\n        }\n        return HexDigit[Math.trunc(Value / 16)] + HexDigit[Value % 16];\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; // not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) + 'FF');\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([01]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) +\n            dec2hex(parseFloat(Match[4])));\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** RGBAColor - converts a given color to RGBA(r,g,b,a) ****/\nfunction RGBAColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        return ColorSet[lowerColor]; // color is already in RGBA format\n    }\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ', 1' +\n            ')');\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ',' +\n            (parseInt(Color.slice(7), 16) / 255) +\n            ')');\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; //not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return Color.slice(0, Color.length - 1) + ',1)';\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([0]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return Color;\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** shortHexColor - converts a given color into #RRGGBB ****/\nfunction shortHexColor(Color) {\n    return HexColor(Color).slice(0, 7);\n}\n\nexport { ColorSet, FunctionWithName, HTMLsafe, HexColor, MarkDownSafe, ObjectIsEmpty, ObjectIsNotEmpty, ObjectMergedWith, Object_hasOwnProperty, Object_isPrototypeOf, Object_propertyIsEnumerable, Object_toLocaleString, Object_toString, Object_valueOf, RGBAColor, StringIsEmpty, StringIsNotEmpty, ValidatorForClassifier, ValueExists, ValueInheritsFrom, ValueIsAnonymousFunction, ValueIsArray, ValueIsBoolean, ValueIsCardinal, ValueIsColor, ValueIsDate, ValueIsEMailAddress, ValueIsEmptyString, ValueIsError, ValueIsFiniteNumber, ValueIsFunction, ValueIsInstanceOf, ValueIsInteger, ValueIsIntegerInRange, ValueIsList, ValueIsListSatisfying, ValueIsMissing, ValueIsNaN, ValueIsNamedFunction, ValueIsNativeFunction, ValueIsNonEmptyString, ValueIsNumber, ValueIsNumberInRange, ValueIsObject, ValueIsOneOf, ValueIsOrdinal, ValueIsPlainObject, ValueIsPromise, ValueIsRegExp, ValueIsScriptedFunction, ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline, ValueIsURL, ValueIsVanillaObject, ValuesAreEqual, ValuesDiffer, acceptNil, allowAnonymousFunction, allowArray, allowBoolean, allowCardinal, allowColor, allowDate, allowEMailAddress, allowError, allowFiniteNumber, allowFunction, allowInstanceOf, allowInteger, allowIntegerInRange, allowList, allowListSatisfying, allowNaN, allowNamedFunction, allowNativeFunction, allowNonEmptyString, allowNumber, allowNumberInRange, allowObject, allowOneOf, allowOrdinal, allowPlainObject, allowPromise, allowRegExp, allowScriptedFunction, allowString, allowStringMatching, allowText, allowTextline, allowURL, allowValueInheritingFrom, allowVanillaObject, allowedAnonymousFunction, allowedArray, allowedBoolean, allowedCardinal, allowedColor, allowedDate, allowedEMailAddress, allowedError, allowedFiniteNumber, allowedFunction, allowedInstanceOf, allowedInteger, allowedIntegerInRange, allowedList, allowedListSatisfying, allowedNaN, allowedNamedFunction, allowedNativeFunction, allowedNonEmptyString, allowedNumber, allowedNumberInRange, allowedObject, allowedOneOf, allowedOrdinal, allowedPlainObject, allowedPromise, allowedRegExp, allowedScriptedFunction, allowedString, allowedStringMatching, allowedText, allowedTextline, allowedURL, allowedValueInheritingFrom, allowedVanillaObject, constrained, escaped, expectAnonymousFunction, expectArray, expectBoolean, expectCardinal, expectColor, expectDate, expectEMailAddress, expectError, expectFiniteNumber, expectFunction, expectInstanceOf, expectInteger, expectIntegerInRange, expectList, expectListSatisfying, expectNaN, expectNamedFunction, expectNativeFunction, expectNonEmptyString, expectNumber, expectNumberInRange, expectObject, expectOneOf, expectOrdinal, expectPlainObject, expectPromise, expectRegExp, expectScriptedFunction, expectString, expectStringMatching, expectText, expectTextline, expectURL, expectValue, expectValueInheritingFrom, expectVanillaObject, expectedAnonymousFunction, expectedArray, expectedBoolean, expectedCardinal, expectedColor, expectedDate, expectedEMailAddress, expectedError, expectedFiniteNumber, expectedFunction, expectedInstanceOf, expectedInteger, expectedIntegerInRange, expectedList, expectedListSatisfying, expectedNaN, expectedNamedFunction, expectedNativeFunction, expectedNonEmptyString, expectedNumber, expectedNumberInRange, expectedObject, expectedOneOf, expectedOrdinal, expectedPlainObject, expectedPromise, expectedRegExp, expectedScriptedFunction, expectedString, expectedStringMatching, expectedText, expectedTextline, expectedURL, expectedValue, expectedValueInheritingFrom, expectedVanillaObject, global, quotable, quoted, rejectNil, shortHexColor, throwError, unescaped, validatedArgument };\n//# sourceMappingURL=javascript-interface-library.esm.js.map\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<!----------------------------------------------------------------------------//\n//                       Svelte Sortable Flat List View                       //\n//----------------------------------------------------------------------------->\n\n<svelte:options accessors={true}/>\n\n<style>\n  .defaultListView {\n    display:inline-flex; flex-flow:column nowrap; position:relative;\n    justify-content:flex-start; align-items:stretch;\n    margin:0px; padding:0px;\n    list-style:none;\n  }\n\n  .withoutTextSelection {\n    -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none;\n    user-select:none;\n  }\n\n  .defaultListView > :global(.ListItemView) {\n    display:block; position:relative; flex:0 0 auto;\n    height:30px; line-height:30px;\n    border:solid 1px transparent;\n    margin:0px 2px 0px 2px; padding:0px 4px 0px 4px;\n    list-style:none;\n  }\n  .defaultListView > :global(.ListItemView > *) { /* disables wobbling */\n    pointer-events:none;\n  }\n\n  .defaultListView:not(.transitioning) > :global(.ListItemView:hover:not(.dragged))    { border:solid 1px }\n  .defaultListView:not(.transitioning) > :global(.ListItemView.selected:not(.dragged)) { background:dodgerblue }\n\n  .defaultListView > :global(.ListItemView.dragged)               { opacity:0.3 }\n  .defaultListView > :global(.ListItemView.hovered:not(.dragged)) { border-top:solid 10px transparent }\n\n  .defaultListView > :global(.AttachmentRegion) {\n    display:block; position:relative; flex:1 1 auto;\n    min-height:20px;\n    background:transparent;\n    border:solid 1px transparent; margin:0px 2px 2px 2px; padding:0px;\n    list-style:none;\n  }\n  .defaultListView > :global(.AttachmentRegion.hovered) { border:solid 1px }\n\n  .defaultListView > :global(.Placeholder) {\n    display:flex; position:absolute;\n    left:0px; top:0px; right:0px; height:100%; /* bottom:0px seems to fail */\n    flex-flow:column nowrap; justify-content:center; align-items:center;\n  }\n</style>\n\n<script context=\"module\" lang=\"ts\">\n  import newUniqueId from 'locally-unique-id-generator'\n  import Device      from 'svelte-device-info'\n\n  import type { Position, DropOperation, DataOfferSet, TypeAcceptanceSet } from 'svelte-drag-and-drop-actions'\n  import      { DropOperations, asDroppable, asDropZone } from 'svelte-drag-and-drop-actions'\n\n  import { createEventDispatcher } from 'svelte'\n  import { flip }                  from 'svelte/animate'\n\n/**** types must always be exported from a \"module\" script ****/\n\n  export type ListDroppableExtras = { List:any[], Item:any, ItemList?:any[] }\n  export type ListDropZoneExtras  = { List:any[], Item:any }\n</script>\n\n<script lang=\"ts\">\n  import {                 // see https://github.com/sveltejs/svelte/issues/5954\n    throwError,\n    ValueIsNonEmptyString, ValueIsFunction, ValueIsObject, ValueIsList,\n    ValueIsOneOf,\n    allowedBoolean, allowOrdinal, allowedString, allowNonEmptyString,\n    allowFunction, allowPlainObject, allowListSatisfying, allowedListSatisfying,\n    ValuesDiffer, quoted\n  } from 'javascript-interface-library'\n\n  let privateKey:string = newUniqueId()\n\n  const dispatch = createEventDispatcher()\n\n  let ListElement:HTMLElement       // will refer to the list view's DOM element\n\n/**** common Attributes ****/\n\n  let ClassNames:string|undefined = undefined; export { ClassNames as class } // used to...\n  export let style:string|undefined = undefined                       // ...control styling\n\n  $: allowNonEmptyString('\"class\" attribute',ClassNames)\n  $: allowNonEmptyString('\"style\" attribute',style)\n\n  export let List:{}[]\n  export let Key:string|Function|undefined     = undefined\n  export let SelectionLimit:number|undefined   = undefined\n  export let AttachmentRegion:string|undefined = undefined\n  export let Placeholder:string|undefined      = undefined\n\n  $: List = allowedListSatisfying('\"List\" attribute', List, ValueIsObject) || []\n\n  let KeyOf:(Item:any) => string\n  $: switch (true) {\n    case (Key == null):\n      KeyOf = (Item) => String(Item); break\n    case ValueIsNonEmptyString(Key):\n      KeyOf = (Item) => String(Item[Key as string]); break\n    case ValueIsFunction(Key):\n      KeyOf = (Item) => String((Key as Function)(Item)); break\n    default: throwError(\n      'InvalidArgument: the given \"Key\" attribute is neither ' +\n      'a non-empty string nor a function returning such a string'\n    )\n  }\n\n  $: allowOrdinal('selection limit',SelectionLimit)\n\n  $: allowNonEmptyString('\"AttachmentRegion\" attribute',AttachmentRegion)\n  $: allowNonEmptyString     ('\"Placeholder\" attribute',Placeholder)\n\n/**** Key Validation and quick Lookup ****/\n\n  let ItemSet:{ [Key:string]:{} }\n\n  function updateItemSet (...ArgumentsAreForReactivityOnly:any[]):void {\n    ItemSet = Object.create(null)\n\n    List.forEach((Item) => {\n      let Key:string = KeyOf(Item)\n      if (Key in ItemSet) {\n        if (ItemSet[Key] === Item) {\n          throwError(\n            'InvalidArgument: the given \"List\" contains the same item ' +\n            'multiple times'\n          )\n        } else {\n          throwError(\n            'InvalidArgument: the given \"Key\" does not produce unique keys ' +\n            'for every \"List\" item'\n          )\n        }\n      } else {\n        ItemSet[Key] = Item\n      }\n    })\n  }\n\n  $: updateItemSet(List,Key)\n\n//----------------------------------------------------------------------------//\n//                         Selection and Deselection                          //\n//----------------------------------------------------------------------------//\n\n  let SelectionSet = new WeakMap()    // automatically \"updates\" on list changes\n\n/**** select ****/\n\n  export function select (...ItemList:{}[]):void {\n    let curSelectionCount = SelectionCount()\n    ItemList.forEach((Item) => {\n      let Key = KeyOf(Item)\n      if (Key in ItemSet) {\n        if (! SelectionSet.has(Item)) {\n          if ((SelectionLimit == null) || (curSelectionCount < SelectionLimit)) {\n            SelectionSet.set(Item,true); curSelectionCount++\n            dispatch('selected-item',Item)\n          }\n        }\n      } else {\n        throwError(\n          'InvalidArgument: one or multiple of the given items to select ' +\n          'are not part of the given \"List\"'\n        )\n      }\n    })\n\n    SelectionRangeBoundaryA = (ItemList.length === 1 ? ItemList[0] : undefined)\n    SelectionRangeBoundaryB = undefined\n    triggerRedraw()\n  }\n\n/**** selectOnly ****/\n\n  export function selectOnly (...ItemList:{}[]):void {\n    if (ValuesDiffer(selectedItems(),ItemList)) {              // not perfect...\n      deselectAll()\n      select(...ItemList)\n//    triggerRedraw()                                     // already done before\n    }\n  }\n\n/**** selectAll ****/\n\n  export function selectAll ():void {\n    let curSelectionCount = SelectionCount()\n    List.forEach((Item) => {\n      if (! SelectionSet.has(Item)) {\n        if ((SelectionLimit == null) || (curSelectionCount < SelectionLimit)) {\n          SelectionSet.set(Item,true); curSelectionCount++\n          dispatch('selected-item',Item)\n        }\n      }\n    })\n\n    SelectionRangeBoundaryA = SelectionRangeBoundaryB = undefined\n    triggerRedraw()\n  }\n\n  let SelectionRangeBoundaryA:{} | undefined\n  let SelectionRangeBoundaryB:{} | undefined\n\n/**** selectRange ****/\n\n  export function selectRange (RangeBoundary:{}):void {\n    if (SelectionRangeBoundaryA == null) {\n      select(RangeBoundary)             // will also set SelectionRangeBoundaryA\n      return\n    }\n\n    if (SelectionRangeBoundaryA === RangeBoundary) { return }\n\n    if (SelectionRangeBoundaryB != null) {\n      deselectRange(SelectionRangeBoundaryB)\n    }\n\n    let IndexA = List.indexOf(SelectionRangeBoundaryA)\n    let IndexB = List.indexOf(RangeBoundary)\n\n    let firstIndex = Math.min(IndexA,IndexB)\n    let lastIndex  = Math.max(IndexA,IndexB)\n\n    let curSelectionCount = SelectionCount()\n    for (let i = firstIndex; i <= lastIndex; i++) {\n      if (! SelectionSet.has(List[i])) {\n        if ((SelectionLimit == null) || (curSelectionCount < SelectionLimit)) {\n          SelectionSet.set(List[i],true)\n          dispatch('selected-item',List[i])\n        }\n      }\n    }\n\n    SelectionRangeBoundaryB = RangeBoundary\n    triggerRedraw()\n  }\n\n/**** deselectRange (internal only) ****/\n\n  function deselectRange (RangeBoundary:{}):void {\n    let IndexA = List.indexOf(SelectionRangeBoundaryA as {})\n    let IndexB = List.indexOf(RangeBoundary)\n\n    let firstIndex = Math.min(IndexA,IndexB)\n    let lastIndex  = Math.max(IndexA,IndexB)\n\n    for (let i = firstIndex; i <= lastIndex; i++) {\n      if (SelectionSet.has(List[i])) {\n        SelectionSet.delete(List[i])\n        dispatch('deselected-item',List[i])\n      }\n    }\n  }\n\n/**** deselect ****/\n\n  export function deselect (...ItemList:{}[]):void {\n    ItemList.forEach((Item) => {\n      let Key = KeyOf(Item)\n      if (Key in ItemSet) {\n        if (SelectionSet.has(Item)) {\n          SelectionSet.delete(Item)\n          dispatch('deselected-item',Item)\n        }\n      } else {\n        throwError(\n          'InvalidArgument: one or multiple of the given items to deselect ' +\n          'are not part of the given \"List\"'\n        )\n      }\n    })\n\n    SelectionRangeBoundaryA = SelectionRangeBoundaryB = undefined\n    triggerRedraw()\n  }\n\n/**** deselectAll ****/\n\n  export function deselectAll ():void {\n    List.forEach((Item) => {\n      if (SelectionSet.has(Item)) {\n        SelectionSet.delete(Item)\n        dispatch('deselected-item',Item)\n      }\n    })\n\n    SelectionRangeBoundaryA = SelectionRangeBoundaryB = undefined\n    triggerRedraw()\n  }\n\n/**** toggleSelectionOf - no check for multiply mentioned items ****/\n\n  export function toggleSelectionOf (...ItemList:{}[]):void {\n    SelectionRangeBoundaryA = undefined\n\n    let ItemsToBeSelected:{}[] = []\n    ItemList.forEach((Item) => {  // deselect first (because of potential limit)\n      let Key = KeyOf(Item)\n      if (Key in ItemSet) {\n        if (SelectionSet.has(Item)) {\n          SelectionSet.delete(Item)\n          dispatch('deselected-item',Item)\n        } else {\n          ItemsToBeSelected.push(Item)\n        }\n      } else {\n        throwError(\n          'InvalidArgument: one or multiple of the given items to select ' +\n          'or deselect are not part of the given \"List\"'\n        )\n      }\n    })\n\n    let curSelectionCount = SelectionCount()\n    if (SelectionLimit != null) {\n      let maxToBeSelected = SelectionLimit-curSelectionCount\n      if (maxToBeSelected < ItemsToBeSelected.length) {\n        ItemsToBeSelected.length = maxToBeSelected\n      }\n    }\n\n    ItemsToBeSelected.forEach((Item) => { // now select as many items as allowed\n      SelectionSet.set(Item,true)\n      dispatch('selected-item',Item)\n\n      if (ItemList.length === 1) {\n        SelectionRangeBoundaryA = Item\n        SelectionRangeBoundaryB = undefined\n      }\n    })\n\n    triggerRedraw()\n  }\n\n/**** selectedItems ****/\n\n  export function selectedItems ():{}[] {\n    let Result:{}[] = List.filter((Item) => SelectionSet.has(Item))\n    return Result\n  }\n\n/**** SelectionCount ****/\n\n  export function SelectionCount ():number {\n    return List.reduce(\n      (Count:number,Item) => Count + (SelectionSet.has(Item) ? 1 : 0),0\n    )\n  }\n\n  $: if ((SelectionLimit != null) && (SelectionCount() > SelectionLimit)) {\n    let Count = 0\n    List.forEach((Item) => {\n      if (SelectionSet.has(Item)) {\n        Count++\n        if (Count > (SelectionLimit as number)) { deselect(Item) }\n      }\n    })\n  } // decreasing the selection limit with an active selection is very bad style\n\n/**** isSelected ****/\n\n  export function isSelected (Item:{}):boolean {\n    return SelectionSet.has(Item)\n  }\n\n/**** handleClick ****/\n\n  function handleClick (Event:MouseEvent, Item:{}):void {\n    switch (true) {\n      case (Event.buttons === 0) && (Event.button  !== 0): return  // workaround\n      case (Event.buttons !== 0) && (Event.buttons !== 1): return  // ...for bug\n\n      case (Device.PointingAccuracy === 'coarse'):\n      case Event.ctrlKey:\n      case Event.metaKey:  toggleSelectionOf(Item); break\n      case Event.shiftKey: selectRange(Item);       break\n      default:             selectOnly(Item);        break\n    }\n\n    Event.preventDefault()\n    Event.stopPropagation()\n  }\n\n//----------------------------------------------------------------------------//\n//                           Drag-and-Drop Handling                           //\n//----------------------------------------------------------------------------//\n\n  let isDragging:boolean    = false\n  let draggedItemList:any[] = []                     // needed for rendering ony\n\n  let InsertionPoint:any = undefined\n\n/**** Attributes for Sorting ****/\n\n  export let sortable:boolean = false  // does this list view support \"sorting\"?\n  export let onlyFrom:string|undefined  = undefined\n  export let neverFrom:string|undefined = undefined\n\n  export let onSortRequest:undefined|((          // opt. callback before sorting\n    x:number,y:number,\n    DroppableExtras:ListDroppableExtras, DropZoneExtras:ListDropZoneExtras\n  ) => boolean) = undefined\n  export let onSort:undefined|          // opt. callback performing act. sorting\n    ((beforeItem:any|undefined, ItemList:{}[]) => void) = undefined\n\n  $: sortable = allowedBoolean('\"sortable\" attribute',sortable) || false\n\n  $: allowNonEmptyString ('\"onlyFrom\" CSS selector list',onlyFrom)\n  $: allowNonEmptyString('\"neverFrom\" CSS selector list',neverFrom)\n\n  $: allowFunction('\"onSortRequest\" callback',onSortRequest)\n  $: allowFunction       ('\"onSort\" callback',onSort)\n\n/**** Attributes for Drag-and-Drop ****/\n\n  export let Operations:string|undefined               = undefined\n  export let DataToOffer:DataOfferSet|undefined        = undefined\n  export let TypesToAccept:TypeAcceptanceSet|undefined = undefined\n\n  export let onOuterDropRequest:undefined|((// opt. callback before outside drop\n    x:number,y:number,\n    Operation:DropOperation, offeredTypeList:string[],\n    DroppableExtras:any, DropZoneExtras:ListDropZoneExtras\n  ) => boolean) = undefined\n  export let onDroppedOutside:undefined|((   // opt. callback after outside drop\n    x:number,y:number,\n    Operation:DropOperation, TypeTransferred:string, DataTransferred:any,\n    DropZoneExtras:any, DroppableExtras:ListDroppableExtras\n  ) => void) = undefined\n  export let onDropFromOutside:undefined|((//opt. callback for drop from outside\n    x:number,y:number,\n    Operation:DropOperation, DataOffered:DataOfferSet,\n    DroppableExtras:any, DropZoneExtras:ListDropZoneExtras\n  ) => string | undefined) = undefined  // returns act. accepted type (if known)\n\n  let wantedOperations:string|undefined\n  let DataOffered:DataOfferSet|undefined\n  let TypesAccepted:TypeAcceptanceSet|undefined\n\n  $: wantedOperations = parsedOperations('list of allowed operations',Operations)\n\n  $: allowPlainObject  ('\"DataToOffer\" attribute',DataToOffer)\n  $: allowPlainObject('\"TypesToAccept\" attribute',TypesToAccept)\n\n  $: allowFunction('\"onOuterDropRequest\" callback',onOuterDropRequest)\n  $: allowFunction  ('\"onDroppedOutside\" callback',onDroppedOutside)\n  $: allowFunction ('\"onDropFromOutside\" callback',onDropFromOutside)\n\n  $: if (! isDragging) {                 // do not update while already dragging\n    DataOffered = Object.assign({}, DataToOffer)\n    if ('none' in DataOffered) throwError(\n      'InvalidArgument: \"none\" is not a valid data type'\n    )\n// @ts-ignore \"DataOffered\" is definitely not undefined\n    if (sortable) { DataOffered[privateKey] = '' }\n  }\n\n  $: if (! isDragging) {                 // do not update while already dragging\n    TypesAccepted = {}\n      if ((TypesToAccept != null) && ('none' in TypesToAccept)) throwError(\n        'InvalidArgument: \"none\" is not a valid data type'\n      )\n\n      for (let Type in TypesToAccept) {\n        if (TypesToAccept.hasOwnProperty(Type)) {\n// @ts-ignore \"TypesAccepted\" is definitely not undefined\n          TypesAccepted[Type] = parsedOperations(\n            'list of accepted operations for type ' + quoted(Type),\n            TypesToAccept[Type]\n          )\n        }\n      }\n// @ts-ignore \"TypesAccepted\" is definitely not undefined\n    if (sortable) { TypesAccepted[privateKey] = 'copy move' }\n  }    // 'copy' because of the better visual feedback from native drag-and-drop\n\n/**** parsedOperations ****/\n\n  function parsedOperations (\n    Description:string, Argument:any, Default:string='copy move link'\n  ):string {\n    let Operations = allowedString(Description,Argument) || Default\n\n    switch (Operations.trim()) {\n      case 'all':  return 'copy move link'\n      case 'none': return ''\n    }\n\n    let OperationList = Operations.trim().replace(/\\s+/g,' ').split(' ')\n      allowListSatisfying(\n        Description,OperationList,\n        (Operation:string) => ValueIsOneOf(Operation,DropOperations)\n      )\n    return OperationList.reduce(\n      (Result:string, Operation:string) => (\n        Result.indexOf(Operation) < 0 ? Result + Operation + ' ': Result\n      ),' '\n    )\n  }\n\n/**** prepare for drag-and-drop ****/\n\n  function hasNonPrivateTypes (TypeSet:any):boolean {\n    for (let Type in TypeSet) {\n      if (TypeSet.hasOwnProperty(Type) && (Type !== privateKey)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  let shrinkable:boolean = false\n  let extendable:boolean = false\n\n  $: if (! isDragging) {                 // do not update while already dragging\n    shrinkable = hasNonPrivateTypes(DataOffered)\n    extendable = hasNonPrivateTypes(TypesAccepted)\n  }\n\n/**** ad-hoc Dummy Creation ****/\n\n  function dynamicDummy (\n    DroppableExtras:ListDroppableExtras, Element:HTMLElement|SVGElement\n  ):HTMLElement|SVGElement {\n    let auxiliaryElement = Element.cloneNode(true) as HTMLElement\n      auxiliaryElement.style.display  = 'block'\n      auxiliaryElement.style.position = 'absolute'\n      auxiliaryElement.style.left     = (document.body.scrollWidth + 100)+'px'\n      auxiliaryElement.style.width    = Element.clientWidth+'px'  // not perfect\n      auxiliaryElement.style.height   = Element.clientHeight+'px'        // dto.\n\n      if (draggedItemList.length > 1) {            // called after \"onDragStart\"\n        let Badge = document.createElement('div')\n          Badge.setAttribute('style',\n            'display:block; position:absolute; ' +\n            'top:-10px; right:-10px; width:20px; height:20px; ' +\n            'background:red; color:white; ' +\n            'border:none; border-radius:10px; margin:0px; padding:0px 4px 0px 4px; ' +\n            'line-height:20px; text-align:center'\n          )\n          Badge.innerText = '+' + (draggedItemList.length-1)\n        auxiliaryElement.appendChild(Badge)\n      }\n\n      document.body.appendChild(auxiliaryElement)\n\n      setTimeout(() => {       // remove element after browser took its snapshot\n        document.body.removeChild(auxiliaryElement)\n      },0)\n    return auxiliaryElement as HTMLElement\n  }\n\n/**** onDragStart ****/\n\n  function onDragStart (DroppableExtras:ListDroppableExtras):Position {\n    isDragging = true\n\n    if (! isSelected(DroppableExtras.Item)) {\n      selectOnly(DroppableExtras.Item)\n    }\n    draggedItemList = DroppableExtras.ItemList = selectedItems()\n\n    return { x:0,y:0 }\n  }\n\n/**** onDragEnd ****/\n\n  function onDragEnd (\n    x:number,y:number, dx:number,dy:number, DroppableExtras:ListDroppableExtras\n  ):void {\n    isDragging = false\n    delete DroppableExtras.ItemList\n\n    draggedItemList.length = 0\n  }\n\n/**** onDropped ****/\n\n  function onDropped (\n    x:number,y:number, Operation:DropOperation,\n    TypeTransferred:string, DataTransferred:any,\n    DropZoneExtras:any, DroppableExtras:ListDroppableExtras\n  ):void {\n    let droppedHere = (List === (DropZoneExtras && DropZoneExtras.List))\n    if (! droppedHere) {\n      if (onDroppedOutside == null) {\n        let droppedItems = DroppableExtras.ItemList as any[]\n\n        let DroppableSet = SetOfItemsIn(droppedItems)\n        for (let i = List.length-1; i >= 0; i--) {\n          let Key = KeyOf(List[i])\n          if (Key in DroppableSet) { List.splice(i,1) }\n        }\n\n        dispatch('removed-items',droppedItems.slice())\n        triggerRedraw()\n      } else {\n        try {\n          onDroppedOutside(\n            x,y, Operation, TypeTransferred,DataTransferred,\n            DropZoneExtras,DroppableExtras\n          )\n        } catch (Signal) {\n          console.error(\n            'RuntimeError: callback \"onDroppedOutside\" failed', Signal\n          )\n        }           // no event to be dispatched (there is already the callback)\n\n        triggerRedraw()                           // just to be on the safe side\n      }\n    }\n  }\n\n/**** onDroppableEnter ****/\n\n  function onDroppableEnter (\n    x:number,y:number, Operation:DropOperation, offeredTypeList:string[],\n    DroppableExtras:any, DropZoneExtras:ListDropZoneExtras\n  ):boolean {\n    if (\n      (List === (DroppableExtras && DroppableExtras.List)) &&\n      (List.indexOf(DroppableExtras.Item) >= 0) &&         // not a foreign item\n      (DroppableExtras.ItemList.indexOf(DropZoneExtras.Item) >= 0)\n    ) {            // don't allow own dragged items to be dropped onto themselves\n      InsertionPoint = undefined\n      triggerRedraw()\n      return false\n    }\n\n    let mayBeInsertedHere = true     // because dnd-action already checked a bit\n      if (List === (DroppableExtras && DroppableExtras.List)) {  // own elements\n        if (sortable) {\n          if (onSortRequest != null) {\n            try {\n              mayBeInsertedHere = onSortRequest(\n                x,y, DroppableExtras,DropZoneExtras\n              )\n            } catch (Signal) {\n              mayBeInsertedHere = false\n              console.error(\n                'RuntimeError: callback \"onSortRequest\" failed', Signal\n              )\n            }\n          }\n        } else {    // not sortable? then own list items may not be dropped here\n          mayBeInsertedHere = false\n        }\n      } else {                       // foreign elements want to be dropped here\n        if (onOuterDropRequest != null) {\n          try {\n            mayBeInsertedHere = onOuterDropRequest(\n              x,y, Operation,offeredTypeList, DroppableExtras,DroppableExtras\n            )\n          } catch (Signal) {\n            mayBeInsertedHere = false\n            console.error(\n              'RuntimeError: callback \"onOuterDropRequest\" failed', Signal\n            )\n          }\n        }\n      }\n    InsertionPoint = (mayBeInsertedHere ? DropZoneExtras.Item : undefined)\n    triggerRedraw()\n\n    return mayBeInsertedHere && (Operation !== 'link')\n  }\n\n/**** onDroppableMove ****/\n\n  const onDroppableMove = onDroppableEnter\n\n/**** onDroppableLeave ****/\n\n  function onDroppableLeave (\n    DroppableExtras:any, DropZoneExtras:ListDropZoneExtras\n  ):void {\n    InsertionPoint = undefined\n//  triggerRedraw()\n  }\n\n/**** onDrop ****/\n\n  function onDrop (\n    x:number,y:number, Operation:DropOperation,\n    DataOffered:any, DroppableExtras:any, DropZoneExtras:ListDropZoneExtras\n  ):string | undefined {\n    InsertionPoint = undefined\n\n    if (\n      (List === (DroppableExtras && DroppableExtras.List)) &&\n      (List.indexOf(DroppableExtras.Item) >= 0) &&         // not a foreign item\n      (DroppableExtras.ItemList.indexOf(DropZoneExtras.Item) >= 0)\n    ) {           // don't allow own dragged items to be dropped onto themselves\n      InsertionPoint = undefined\n      triggerRedraw()\n      return 'none'\n    }\n\n    if (List === (DroppableExtras && DroppableExtras.List)) {    // own elements\n      if (sortable) {\n        let droppedItems = DroppableExtras.ItemList\n\n        if (onSort == null) {\n          let DroppableSet = SetOfItemsIn(droppedItems)\n          for (let i = List.length-1; i >= 0; i--) {\n            let Key = KeyOf(List[i])\n            if (Key in DroppableSet) { List.splice(i,1) }\n          }\n\n          let InsertionIndex = List.indexOf(DropZoneExtras.Item)\n          if (InsertionIndex < 0) { InsertionIndex = List.length } // for append\n\n// @ts-ignore argument list of \"apply\" is known to be correct\n          List.splice.apply(List, [InsertionIndex,0].concat(droppedItems))\n\n          dispatch('sorted-items',[droppedItems.slice(),InsertionIndex])\n          triggerRedraw()\n        } else {\n          try {\n            onSort(DropZoneExtras.Item, droppedItems.slice())\n          } catch (Signal) {\n            console.error('RuntimeError: callback \"onSort\" failed', Signal)\n          }         // no event to be dispatched (there is already the callback)\n\n          triggerRedraw()                         // just to be on the safe side\n        }\n        return Operation   // should be 'move', but 'copy' gives better feedback\n      } else {\n        return 'none'\n      }\n    } else {                         // foreign elements want to be dropped here\n      if (onDropFromOutside == null) {\n        let ItemsToBeInserted = (DroppableExtras && DroppableExtras.ItemList)\n        if (! ValueIsList(ItemsToBeInserted)) { return 'none' }\n\n        let InsertionIndex = List.indexOf(DropZoneExtras.Item)\n        if (InsertionIndex < 0) { InsertionIndex = List.length } // for \"append\"\n\n// @ts-ignore argument list of \"apply\" is known to be correct\n        List.splice.apply(List, [InsertionIndex,0].concat(ItemsToBeInserted))\n\n        dispatch('inserted-items',[ItemsToBeInserted.slice(),InsertionIndex])\n        triggerRedraw()\n\n        return undefined                             // accepted type is unknown\n      } else {\n        let acceptedType:string|undefined = undefined\n          try {\n            acceptedType = onDropFromOutside(\n              x,y, Operation,DataOffered, DroppableExtras,DropZoneExtras\n            )\n          } catch (Signal) {\n            console.error('RuntimeError: callback \"onSort\" failed', Signal)\n          }         // no event to be dispatched (there is already the callback)\n\n          triggerRedraw()                         // just to be on the safe side\n        return acceptedType                          // accepted type is unknown\n      }\n    }\n  }\n\n/**** scale ****/\n\n  function scale (Element:HTMLElement, Options:any):{} {\n    const currentStyle = window.getComputedStyle(Element)\n\n    const currentTransform:string = (\n      currentStyle.transform === 'none' ? '' : currentStyle.transform\n    )\n\n    return {\n      delay:0, duration:300,\n      css: (t:number, u:number) => (\n        `transform: ${currentTransform} translateX(-${50*u}%) scaleX(${t})`\n      )\n    }\n  }\n\n/**** TransitionStarted ****/\n\n  function TransitionStarted ():void {\n    ListElement.classList.add('transitioning')\n  }\n\n  function TransitionEnded ():void {\n    ListElement.classList.remove('transitioning')\n  }\n\n/**** SetOfItemsIn ****/\n\n  function SetOfItemsIn (ItemList:any[]):{} {\n    let ItemSet = Object.create(null)\n      ItemList.forEach((Item) => {\n        let Key:string = KeyOf(Item)\n        ItemSet[Key] = Item\n      })\n    return ItemSet\n  }\n\n\n\n/**** triggerRedraw ****/\n\n  function triggerRedraw ():void { List = List }\n</script>\n\n<ul\n  bind:this={ListElement}\n  class:defaultListView={ClassNames == null}\n  class:withoutTextSelection={true}\n  class={ClassNames} {style}\n  {...$$restProps}\n>\n  {#if (List.length > 0)}\n    {#if sortable || extendable || shrinkable}\n      {#each List as Item,Index (KeyOf(Item))}\n        <li\n          class:ListItemView={true}\n          class:dragged={draggedItemList.indexOf(Item) >= 0}\n          class:selected={isSelected(Item)}\n          on:click={(Event) => handleClick(Event,Item)}\n          use:asDroppable={{\n            onlyFrom, neverFrom, Dummy:dynamicDummy,\n            Extras:{ List, Item }, DataToOffer:DataOffered,\n            onDragStart, onDragEnd, onDropped\n          }}\n          use:asDropZone={{\n            Extras:{ List, Item }, TypesToAccept:TypesAccepted,\n            onDrop, onDroppableEnter, onDroppableMove, onDroppableLeave\n          }}\n          animate:flip\n          transition:scale on:outrostart={TransitionStarted} on:outroend={TransitionEnded}\n        >\n          <slot {Item} {Index}> {KeyOf(Item)} </slot>\n        </li>\n      {/each}\n\n      {#if sortable || extendable}\n        <li\n          class:AttachmentRegion={true}\n          use:asDropZone={{\n            Extras:{ List, Item:undefined }, TypesToAccept:TypesAccepted,\n            onDroppableEnter, onDroppableMove, onDrop\n          }}\n        >{@html AttachmentRegion || ''}</li>\n      {/if}\n    {:else}\n      {#each List as Item,Index (KeyOf(Item))}\n        <li\n          class:ListItemView={true}\n          class:selected={isSelected(Item)}\n          on:click={(Event) => handleClick(Event,Item)}\n          transition:scale on:outrostart={TransitionStarted} on:outroend={TransitionEnded}\n        >\n          <slot {Item} {Index}> {KeyOf(Item)} </slot>\n        </li>\n      {/each}\n    {/if}\n  {:else}\n    {#if extendable}\n      <li\n        class:Placeholder={true}\n        use:asDropZone={{\n          Extras:{ List, Item:undefined }, TypesToAccept:TypesAccepted,\n          onDroppableEnter, onDroppableMove, onDrop\n        }}\n      >{@html Placeholder || '(empty list)'}</li>\n    {:else}\n      <li class:Placeholder={true}>{@html Placeholder || '(empty list)'}</li>\n    {/if}\n  {/if}\n</ul>\n\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","compute_rest_props","props","keys","rest","Set","has","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","abort","is_hydrating","upper_bound","low","high","key","value","mid","append","target","node","hydrate_init","children","childNodes","m","Int32Array","longest","seqLen","idx","claim_order","newLen","lis","toMove","last","cur","push","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert","detach","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","style","cssText","set","set_data","wholeText","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","add_transform","getBoundingClientRect","left","top","getComputedStyle","transform","set_current_component","component","createEventDispatcher","Error","get_current_component","callbacks","$$","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","fragment","before_update","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","then","outro_and_destroy_block","lookup","fix_and_outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","will_move","did_move","first","new_block","old_block","new_key","old_key","make_dirty","fill","instance","create_fragment","not_equal","parent_component","bound","on_mount","on_destroy","on_disconnect","context","skip_bound","ready","ret","hydrate","nodes","Array","from","l","customElement","new_on_destroy","map","mount_component","cubicOut","flip","scaleX","width","clientWidth","scaleY","height","clientHeight","dx","to","dy","sqrt","_t","u","global","Function","throwError","Message","Match","exec","namedError","ValueIsFiniteNumber","Value","Number","isFinite","valueOf","ValueIsInteger","round","ValueIsString","String","emptyStringPattern","ValueIsNonEmptyString","test","ValueIsFunction","ValueIsObject","ValueIsPlainObject","getPrototypeOf","prototype","ValueIsArray","isArray","ValueIsOneOf","ValueList","acceptNil","ValidatorForClassifier","Classifier","NilIsAcceptable","Expectation","Validator","Description","Argument","ValueIsValid","escaped","Boolean","validatedArgument","ClassifierName","originalFunction","desiredName","defineProperty","signal","renamed","FunctionWithName","replace","allowedFiniteNumber","expectInteger","allowedIntegerInRange","minValue","maxValue","expectedIntegerInRange","isNaN","RangeError","allowedString","allowedNonEmptyString","allowedFunction","expectObject","allowPlainObject","allowedPlainObject","expectedListSatisfying","minLength","maxLength","Signal","ValueIsListSatisfying","Text","HexCode","toString","quoted","Quote","quotable","ObjectIsNotEmpty","Candidate","Key","PropertyName","hasOwnProperty","ObjectIsEmpty","constrained","Minimum","Maximum","Infinity","min","svelteCoordinateConversion","fromViewportTo","System","originalPosition","Target","scrollX","scrollY","Element","computedStyle","leftOffset","parseFloat","borderLeftWidth","topOffset","borderTopWidth","TargetPositionInViewport","fromDocumentTo","fromLocalTo","Source","SourcePositionInViewport","leftPosition","topPosition","Context","__DragAndDropActions","parsedDraggableOptions","Options","Extras","relativeTo","onlyFrom","neverFrom","Dummy","DummyOffsetX","DummyOffsetY","minX","minY","maxX","maxY","onDragStart","HTMLElement","SVGElement","y","_a","x_1","y_1","onDragMove","onDragEnd","onDragCancel","fromForbiddenElement","originalEvent","fromElement","clientX","clientY","touchedElement","elementFromPoint","innerElementOf","closest","contains","innerElements","innerElement","Position","Conversion","offsetWidth","offsetHeight","DropOperations","parsedDroppableOptions","Operations","DataToOffer","parsedOperations","onDropZoneEnter","onDropZoneHover","onDropZoneLeave","onDropped","asDroppable","isDragged","currentDraggableOptions","currentDroppableOptions","PositionReference","ReferenceDeltaX","ReferenceDeltaY","PositioningWasDelayed","DragImage","initialPosition","lastPosition","lastDropZoneElement","lastDropZoneExtras","stopPropagation","preventDefault","body","PositionReferenceFor","relativePosition","pageX","pageY","StartPosition","console","error","invisibleDragImage","auxiliaryElement","display","position","scrollWidth","innerHTML","DragImageFor","dataTransfer","OffsetX","OffsetY","PositionInDraggable","setDragImage","setTimeout","allowedEffects","effectAllowed","Type","setData","currentDroppableExtras","currentDropZoneExtras","currentDropZonePosition","DroppableWasDropped","currentDropOperation","currentTypeTransferred","currentDataTransferred","screenX","screenY","invokeHandler","currentDropZoneElement","remove","updateDraggableOptions","updateDroppableOptions","parsedDropZoneOptions","TypesToAccept","HoldDelay","onDroppableEnter","onDroppableMove","onDroppableLeave","onDroppableHold","onDroppableRelease","onDrop","asDropZone","currentDropZoneOptions","wantedOperation","dropEffect","offeredTypeList","types","DropZonePosition","asPosition","ResultOfHandler","offeredData","getData","acceptedType","Default","trim","OperationList","allowListSatisfying","Operation","reduce","Result","Name","Arguments","_i","arguments","apply","memoized","DeviceIsMobile","navigator","userAgent","vendor","substr","DeviceIsPhone","ViewportWidth","innerWidth","ViewportHeight","innerHeight","smallerEdgeSize","largerEdgeSize","MediaQuery","Query","MediaMatcher","matchMedia","matches","DocumentIsReady","readyState","AppRunsOnLegacyTouchDevice","Window","maxTouchPoints","ListElement","List","Index","item","ListHasElementMatching","Pattern","DevicePointingAccuracy","updateDevicePointingAccuracy","waitingForLoaded","updatedPointingAccuracy","ClassList","registerHandler","Handler","onceOnly","EventHandlerRegistry","AccuracyPoller","setInterval","oldPointingAccuracy","warn","unregisterHandler","invokeRegisteredHandlers","splice","clearInterval","svelteDeviceInfo","isMobile","isPhone","isTablet","isLegacyTouchDevice","rewriteMediaQueriesOnLegacyTouchDevices","MediaQueriesHaveBeenRewritten","Stylesheets","styleSheets","Rules","Rule","CSSRule","MEDIA_RULE","media","Media","mediaText","Links","getElementsByTagName","Link","PointingAccuracy","onPointingAccuracyChanged","oncePointingAccuracyChanged","offPointingAccuracyChanged","observesPointingAccuracy","IdCounter","ValueIsBoolean","ValueIsOrdinal","nextId","allowedBoolean","allowOrdinal","allowNonEmptyString","allowFunction","allowedListSatisfying","ValuesDiffer","thisValue","otherValue","thisType","EPSILON","thisArray","otherArray","ArraysDiffer","thisObject","otherObject","ObjectsDiffer","ref","insertAt","styleSheet","Item","right","bottom","start_time","running","started","stop","levels","updates","to_null_out","accounted_for","scale","currentStyle","currentTransform","privateKey","KeyOf","ItemSet","ClassNames","SelectionLimit","AttachmentRegion","Placeholder","SelectionRangeBoundaryA","SelectionRangeBoundaryB","SelectionSet","WeakMap","select","ItemList","curSelectionCount","SelectionCount","triggerRedraw","selectOnly","selectedItems","deselectAll","selectRange","RangeBoundary","IndexA","IndexB","firstIndex","lastIndex","deselectRange","deselect","toggleSelectionOf","ItemsToBeSelected","maxToBeSelected","Count","isSelected","handleClick","Event","buttons","button","Device","ctrlKey","metaKey","shiftKey","DataOffered","TypesAccepted","isDragging","draggedItemList","sortable","onSortRequest","onSort","onOuterDropRequest","onDroppedOutside","onDropFromOutside","hasNonPrivateTypes","TypeSet","shrinkable","extendable","DroppableExtras","DropZoneExtras","mayBeInsertedHere","SetOfItemsIn","result","cloneNode","Badge","innerText","TypeTransferred","DataTransferred","droppedItems","DroppableSet","InsertionIndex","concat","ItemsToBeInserted","ValueIsList","$destroy","detaching","destroy_component","this","$on","index","$set","$$props","obj","$$set"],"mappings":"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"}